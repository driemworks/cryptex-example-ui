[{"/home/driemworks/dkg/examples/react-wasm-client/src/index.js":"1","/home/driemworks/dkg/examples/react-wasm-client/src/App.js":"2","/home/driemworks/dkg/examples/react-wasm-client/src/reportWebVitals.js":"3","/home/driemworks/dkg/examples/react-wasm-client/src/useWasm.js":"4","/home/driemworks/cryptex/ui/src/index.js":"5","/home/driemworks/cryptex/ui/src/App.js":"6","/home/driemworks/cryptex/ui/src/reportWebVitals.js":"7","/home/driemworks/cryptex/ui/src/useWasm.js":"8"},{"size":552,"mtime":1681853174420,"results":"9","hashOfConfig":"10"},{"size":2627,"mtime":1681853174420,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1681853174420,"results":"12","hashOfConfig":"10"},{"size":264,"mtime":1681853174420,"results":"13","hashOfConfig":"10"},{"size":552,"mtime":1681999377480,"results":"14","hashOfConfig":"15"},{"size":12764,"mtime":1682368946860,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1681999377480,"results":"17","hashOfConfig":"15"},{"size":269,"mtime":1682001867950,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cw57at",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"4dwxl",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/home/driemworks/dkg/examples/react-wasm-client/src/index.js",[],[],"/home/driemworks/dkg/examples/react-wasm-client/src/App.js",["45","46"],[],"/* global BigInt */\r\nimport './App.css';\r\nimport { w_keygen, w_calculate_secret, \r\n    w_calculate_pubkey, w_combine_pubkeys,\r\n    w_combine_secrets, w_encrypt, w_threshold_decrypt\r\n} from \"dkg\";\r\nimport { useWasm } from './useWasm';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction App() {\r\n  // make sure the wasm blob is loaded\r\n  useWasm();\r\n\r\n  const [societySize, setSocietySize] = useState(0);\r\n  const [threshold, setThreshold] = useState(0);\r\n  const [society, setSociety] = useState([]);\r\n\r\n  const handleKeygen = () => {\r\n    // each participant must agree on two numbers\r\n    let r1 = 45432;\r\n    let r2 = 48484;\r\n    let results = [];\r\n    // each participant independently generates a polynomial and calulates their keys\r\n    for (let i = 0; i < societySize; i++) {\r\n      // generate random number \r\n      let r = 23;\r\n      let poly = w_keygen(BigInt(r), threshold);\r\n      let secret = w_calculate_secret(poly.coeffs);\r\n      let pubkey = w_calculate_pubkey(BigInt(r1), BigInt(r2), secret)\r\n      results.push({\r\n        i: i,\r\n        pubkey: pubkey,\r\n        secret: secret,\r\n      });\r\n    };\r\n    setSociety(results);\r\n  }\r\n\r\n  const calculateGroupPublicKey = () => {\r\n    return society.reduce((a, b) => w_combine_pubkeys(a.pubkey, b.pubkey));\r\n  }\r\n\r\n  const calculateGroupSecretKey = () => {\r\n    return society.reduce((a, b) => w_combine_secrets(a.secret, b.secret));\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h2>DKG Wasm Example</h2>\r\n        <p>Generate keys, encrypt and decrypt messages</p>\r\n      </div>\r\n      <div className='body'>\r\n        { society.length === 0 ? \r\n        <div className='section'>\r\n          <span>\r\n            Generate keys\r\n          </span>\r\n          <label htmlFor='society-size-input'>Set number of participants</label>\r\n          {societySize}\r\n          <input id='society-size-input' type='number' value={societySize} onChange={(e) => setSocietySize(e.target.value)} />\r\n          <label htmlFor='threshold-input'>Set threshold</label>\r\n          <input id='threshold-input' type='number' value={threshold} onChange={(e) => setThreshold(e.target.value)} />\r\n          <button onClick={handleKeygen}> Keygen\r\n          </button>\r\n        </div>\r\n        : \r\n        <div className='section'>\r\n          <span>There are `{society.length}` participants.</span>\r\n          <span>The group secret key is `{JSON.stringify(calculateGroupSecretKey())}` </span>\r\n          <span>The group public key is `{JSON.stringify(calculateGroupPublicKey())}`</span>\r\n        </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/driemworks/dkg/examples/react-wasm-client/src/reportWebVitals.js",[],[],"/home/driemworks/dkg/examples/react-wasm-client/src/useWasm.js",[],[],"/home/driemworks/cryptex/ui/src/index.js",[],[],[],"/home/driemworks/cryptex/ui/src/App.js",["47","48","49","50","51","52","53","54"],[],"/home/driemworks/cryptex/ui/src/reportWebVitals.js",[],[],"/home/driemworks/cryptex/ui/src/useWasm.js",[],[],{"ruleId":"55","severity":1,"message":"56","line":5,"column":24,"nodeType":"57","messageId":"58","endLine":5,"endColumn":33},{"ruleId":"55","severity":1,"message":"59","line":5,"column":35,"nodeType":"57","messageId":"58","endLine":5,"endColumn":54},{"ruleId":"55","severity":1,"message":"60","line":6,"column":29,"nodeType":"57","messageId":"58","endLine":6,"endColumn":35},{"ruleId":"55","severity":1,"message":"61","line":7,"column":5,"nodeType":"57","messageId":"58","endLine":7,"endColumn":20},{"ruleId":"55","severity":1,"message":"62","line":7,"column":22,"nodeType":"57","messageId":"58","endLine":7,"endColumn":37},{"ruleId":"55","severity":1,"message":"63","line":8,"column":5,"nodeType":"57","messageId":"58","endLine":8,"endColumn":12},{"ruleId":"55","severity":1,"message":"64","line":8,"column":14,"nodeType":"57","messageId":"58","endLine":8,"endColumn":31},{"ruleId":"55","severity":1,"message":"65","line":19,"column":10,"nodeType":"57","messageId":"58","endLine":19,"endColumn":19},{"ruleId":"55","severity":1,"message":"66","line":19,"column":21,"nodeType":"57","messageId":"58","endLine":19,"endColumn":33},{"ruleId":"67","severity":1,"message":"68","line":51,"column":6,"nodeType":"69","endLine":51,"endColumn":12,"suggestions":"70"},"no-unused-vars","'w_encrypt' is defined but never used.","Identifier","unusedVar","'w_threshold_decrypt' is defined but never used.","'verify' is defined but never used.","'combine_pubkeys' is defined but never used.","'combine_secrets' is defined but never used.","'encrypt' is defined but never used.","'threshold_decrypt' is defined but never used.","'societyId' is assigned a value but never used.","'setSocietyId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'api' and 'updateMembershipMaps'. Either include them or remove the dependency array.","ArrayExpression",["71"],{"desc":"72","fix":"73"},"Update the dependencies array to be: [acct, api, updateMembershipMaps]",{"range":"74","text":"75"},[1505,1511],"[acct, api, updateMembershipMaps]"]