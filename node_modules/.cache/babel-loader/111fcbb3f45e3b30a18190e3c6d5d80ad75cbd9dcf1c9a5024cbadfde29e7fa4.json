{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { getImageHashBounded } from './util.js';\nfunction isNewDepositors(depositors) {\n  // Detect balance...\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  return isFunction(depositors[1].mul);\n}\nfunction parse(_ref) {\n  let [proposals, images, optDepositors] = _ref;\n  return proposals.filter((_ref2, index) => {\n    let [,, proposer] = _ref2;\n    return !!optDepositors[index]?.isSome && !proposer.isEmpty;\n  }).map((_ref3, proposalIndex) => {\n    let [index, hash, proposer] = _ref3;\n    const depositors = optDepositors[proposalIndex].unwrap();\n    return objectSpread({\n      image: images[proposalIndex],\n      imageHash: getImageHashBounded(hash),\n      index,\n      proposer\n    }, isNewDepositors(depositors) ? {\n      balance: depositors[1],\n      seconds: depositors[0]\n    } : {\n      balance: depositors[0],\n      seconds: depositors[1]\n    });\n  });\n}\nexport function proposals(instanceId, api) {\n  return memo(instanceId, () => isFunction(api.query.democracy?.publicProps) ? api.query.democracy.publicProps().pipe(switchMap(proposals => proposals.length ? combineLatest([of(proposals), api.derive.democracy.preimages(proposals.map(_ref4 => {\n    let [, hash] = _ref4;\n    return hash;\n  })), api.query.democracy.depositOf.multi(proposals.map(_ref5 => {\n    let [index] = _ref5;\n    return index;\n  }))]) : of([[], [], []])), map(parse)) : of([]));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","isFunction","objectSpread","memo","getImageHashBounded","isNewDepositors","depositors","mul","parse","_ref","proposals","images","optDepositors","filter","_ref2","index","proposer","isSome","isEmpty","_ref3","proposalIndex","hash","unwrap","image","imageHash","balance","seconds","instanceId","api","query","democracy","publicProps","pipe","length","derive","preimages","_ref4","depositOf","multi","_ref5"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/api-derive/democracy/proposals.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { getImageHashBounded } from './util.js';\nfunction isNewDepositors(depositors) {\n    // Detect balance...\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    return isFunction(depositors[1].mul);\n}\nfunction parse([proposals, images, optDepositors]) {\n    return proposals\n        .filter(([, , proposer], index) => !!(optDepositors[index]?.isSome) && !proposer.isEmpty)\n        .map(([index, hash, proposer], proposalIndex) => {\n        const depositors = optDepositors[proposalIndex].unwrap();\n        return objectSpread({\n            image: images[proposalIndex],\n            imageHash: getImageHashBounded(hash),\n            index,\n            proposer\n        }, isNewDepositors(depositors)\n            ? { balance: depositors[1], seconds: depositors[0] }\n            : { balance: depositors[0], seconds: depositors[1] });\n    });\n}\nexport function proposals(instanceId, api) {\n    return memo(instanceId, () => isFunction(api.query.democracy?.publicProps)\n        ? api.query.democracy.publicProps().pipe(switchMap((proposals) => proposals.length\n            ? combineLatest([\n                of(proposals),\n                api.derive.democracy.preimages(proposals.map(([, hash]) => hash)),\n                api.query.democracy.depositOf.multi(proposals.map(([index]) => index))\n            ])\n            : of([[], [], []])), map(parse))\n        : of([]));\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AACxD,SAASC,UAAU,EAAEC,YAAY,QAAQ,gBAAgB;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,mBAAmB,QAAQ,WAAW;AAC/C,SAASC,eAAeA,CAACC,UAAU,EAAE;EACjC;EACA;EACA,OAAOL,UAAU,CAACK,UAAU,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;AACxC;AACA,SAASC,KAAKA,CAAAC,IAAA,EAAqC;EAAA,IAApC,CAACC,SAAS,EAAEC,MAAM,EAAEC,aAAa,CAAC,GAAAH,IAAA;EAC7C,OAAOC,SAAS,CACXG,MAAM,CAAC,CAAAC,KAAA,EAAiBC,KAAK;IAAA,IAArB,IAAKC,QAAQ,CAAC,GAAAF,KAAA;IAAA,OAAY,CAAC,CAAEF,aAAa,CAACG,KAAK,CAAC,EAAEE,MAAO,IAAI,CAACD,QAAQ,CAACE,OAAO;EAAA,EAAC,CACxFpB,GAAG,CAAC,CAAAqB,KAAA,EAA0BC,aAAa,KAAK;IAAA,IAA3C,CAACL,KAAK,EAAEM,IAAI,EAAEL,QAAQ,CAAC,GAAAG,KAAA;IAC7B,MAAMb,UAAU,GAAGM,aAAa,CAACQ,aAAa,CAAC,CAACE,MAAM,EAAE;IACxD,OAAOpB,YAAY,CAAC;MAChBqB,KAAK,EAAEZ,MAAM,CAACS,aAAa,CAAC;MAC5BI,SAAS,EAAEpB,mBAAmB,CAACiB,IAAI,CAAC;MACpCN,KAAK;MACLC;IACJ,CAAC,EAAEX,eAAe,CAACC,UAAU,CAAC,GACxB;MAAEmB,OAAO,EAAEnB,UAAU,CAAC,CAAC,CAAC;MAAEoB,OAAO,EAAEpB,UAAU,CAAC,CAAC;IAAE,CAAC,GAClD;MAAEmB,OAAO,EAAEnB,UAAU,CAAC,CAAC,CAAC;MAAEoB,OAAO,EAAEpB,UAAU,CAAC,CAAC;IAAE,CAAC,CAAC;EAC7D,CAAC,CAAC;AACN;AACA,OAAO,SAASI,SAASA,CAACiB,UAAU,EAAEC,GAAG,EAAE;EACvC,OAAOzB,IAAI,CAACwB,UAAU,EAAE,MAAM1B,UAAU,CAAC2B,GAAG,CAACC,KAAK,CAACC,SAAS,EAAEC,WAAW,CAAC,GACpEH,GAAG,CAACC,KAAK,CAACC,SAAS,CAACC,WAAW,EAAE,CAACC,IAAI,CAAChC,SAAS,CAAEU,SAAS,IAAKA,SAAS,CAACuB,MAAM,GAC5EpC,aAAa,CAAC,CACZE,EAAE,CAACW,SAAS,CAAC,EACbkB,GAAG,CAACM,MAAM,CAACJ,SAAS,CAACK,SAAS,CAACzB,SAAS,CAACZ,GAAG,CAACsC,KAAA;IAAA,IAAC,GAAGf,IAAI,CAAC,GAAAe,KAAA;IAAA,OAAKf,IAAI;EAAA,EAAC,CAAC,EACjEO,GAAG,CAACC,KAAK,CAACC,SAAS,CAACO,SAAS,CAACC,KAAK,CAAC5B,SAAS,CAACZ,GAAG,CAACyC,KAAA;IAAA,IAAC,CAACxB,KAAK,CAAC,GAAAwB,KAAA;IAAA,OAAKxB,KAAK;EAAA,EAAC,CAAC,CACzE,CAAC,GACAhB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAED,GAAG,CAACU,KAAK,CAAC,CAAC,GAClCT,EAAE,CAAC,EAAE,CAAC,CAAC;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}