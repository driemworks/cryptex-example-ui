{"ast":null,"code":"import { emptyCheck } from './emptyCheck.js';\nconst CheckMortality = {\n  extrinsic: {\n    era: 'ExtrinsicEra'\n  },\n  payload: {\n    blockHash: 'Hash'\n  }\n};\nexport const substrate = {\n  ChargeTransactionPayment: {\n    extrinsic: {\n      tip: 'Compact<Balance>'\n    },\n    payload: {}\n  },\n  CheckBlockGasLimit: emptyCheck,\n  CheckEra: CheckMortality,\n  CheckGenesis: {\n    extrinsic: {},\n    payload: {\n      genesisHash: 'Hash'\n    }\n  },\n  CheckMortality,\n  CheckNonZeroSender: emptyCheck,\n  CheckNonce: {\n    extrinsic: {\n      nonce: 'Compact<Index>'\n    },\n    payload: {}\n  },\n  CheckSpecVersion: {\n    extrinsic: {},\n    payload: {\n      specVersion: 'u32'\n    }\n  },\n  CheckTxVersion: {\n    extrinsic: {},\n    payload: {\n      transactionVersion: 'u32'\n    }\n  },\n  CheckVersion: {\n    extrinsic: {},\n    payload: {\n      specVersion: 'u32'\n    }\n  },\n  CheckWeight: emptyCheck,\n  LockStakingStatus: emptyCheck,\n  ValidateEquivocationReport: emptyCheck\n};","map":{"version":3,"names":["emptyCheck","CheckMortality","extrinsic","era","payload","blockHash","substrate","ChargeTransactionPayment","tip","CheckBlockGasLimit","CheckEra","CheckGenesis","genesisHash","CheckNonZeroSender","CheckNonce","nonce","CheckSpecVersion","specVersion","CheckTxVersion","transactionVersion","CheckVersion","CheckWeight","LockStakingStatus","ValidateEquivocationReport"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/types/extrinsic/signedExtensions/substrate.js"],"sourcesContent":["import { emptyCheck } from './emptyCheck.js';\nconst CheckMortality = {\n    extrinsic: {\n        era: 'ExtrinsicEra'\n    },\n    payload: {\n        blockHash: 'Hash'\n    }\n};\nexport const substrate = {\n    ChargeTransactionPayment: {\n        extrinsic: {\n            tip: 'Compact<Balance>'\n        },\n        payload: {}\n    },\n    CheckBlockGasLimit: emptyCheck,\n    CheckEra: CheckMortality,\n    CheckGenesis: {\n        extrinsic: {},\n        payload: {\n            genesisHash: 'Hash'\n        }\n    },\n    CheckMortality,\n    CheckNonZeroSender: emptyCheck,\n    CheckNonce: {\n        extrinsic: {\n            nonce: 'Compact<Index>'\n        },\n        payload: {}\n    },\n    CheckSpecVersion: {\n        extrinsic: {},\n        payload: {\n            specVersion: 'u32'\n        }\n    },\n    CheckTxVersion: {\n        extrinsic: {},\n        payload: {\n            transactionVersion: 'u32'\n        }\n    },\n    CheckVersion: {\n        extrinsic: {},\n        payload: {\n            specVersion: 'u32'\n        }\n    },\n    CheckWeight: emptyCheck,\n    LockStakingStatus: emptyCheck,\n    ValidateEquivocationReport: emptyCheck\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,iBAAiB;AAC5C,MAAMC,cAAc,GAAG;EACnBC,SAAS,EAAE;IACPC,GAAG,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACLC,SAAS,EAAE;EACf;AACJ,CAAC;AACD,OAAO,MAAMC,SAAS,GAAG;EACrBC,wBAAwB,EAAE;IACtBL,SAAS,EAAE;MACPM,GAAG,EAAE;IACT,CAAC;IACDJ,OAAO,EAAE,CAAC;EACd,CAAC;EACDK,kBAAkB,EAAET,UAAU;EAC9BU,QAAQ,EAAET,cAAc;EACxBU,YAAY,EAAE;IACVT,SAAS,EAAE,CAAC,CAAC;IACbE,OAAO,EAAE;MACLQ,WAAW,EAAE;IACjB;EACJ,CAAC;EACDX,cAAc;EACdY,kBAAkB,EAAEb,UAAU;EAC9Bc,UAAU,EAAE;IACRZ,SAAS,EAAE;MACPa,KAAK,EAAE;IACX,CAAC;IACDX,OAAO,EAAE,CAAC;EACd,CAAC;EACDY,gBAAgB,EAAE;IACdd,SAAS,EAAE,CAAC,CAAC;IACbE,OAAO,EAAE;MACLa,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,cAAc,EAAE;IACZhB,SAAS,EAAE,CAAC,CAAC;IACbE,OAAO,EAAE;MACLe,kBAAkB,EAAE;IACxB;EACJ,CAAC;EACDC,YAAY,EAAE;IACVlB,SAAS,EAAE,CAAC,CAAC;IACbE,OAAO,EAAE;MACLa,WAAW,EAAE;IACjB;EACJ,CAAC;EACDI,WAAW,EAAErB,UAAU;EACvBsB,iBAAiB,EAAEtB,UAAU;EAC7BuB,0BAA0B,EAAEvB;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}