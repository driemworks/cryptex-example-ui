{"ast":null,"code":"import { isCodec, isU8a, lazyMethod, objectSpread, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from '../../../create/lazy.js';\nimport { objectNameToString } from '../util.js';\nexport function variantToMeta(lookup, variant) {\n  return objectSpread({\n    args: variant.fields.map(_ref => {\n      let {\n        type\n      } = _ref;\n      return lookup.getTypeDef(type).type;\n    })\n  }, variant);\n}\n/** @internal */\nexport function decorateErrors(registry, _ref2, version) {\n  let {\n    lookup,\n    pallets\n  } = _ref2;\n  const result = {};\n  for (let i = 0; i < pallets.length; i++) {\n    const {\n      errors,\n      index,\n      name\n    } = pallets[i];\n    if (errors.isSome) {\n      const sectionIndex = version >= 12 ? index.toNumber() : i;\n      lazyMethod(result, stringCamelCase(name), () => lazyVariants(lookup, errors.unwrap(), objectNameToString, variant => ({\n        // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects\n        is: errorMod => isCodec(errorMod) && isCodec(errorMod.index) && errorMod.index.eq(sectionIndex) && (isU8a(errorMod.error) ? errorMod.error[0] === variant.index.toNumber() : isCodec(errorMod.error) && errorMod.error.eq(variant.index)),\n        meta: registry.createTypeUnsafe('ErrorMetadataLatest', [variantToMeta(lookup, variant)])\n      })));\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["isCodec","isU8a","lazyMethod","objectSpread","stringCamelCase","lazyVariants","objectNameToString","variantToMeta","lookup","variant","args","fields","map","_ref","type","getTypeDef","decorateErrors","registry","_ref2","version","pallets","result","i","length","errors","index","name","isSome","sectionIndex","toNumber","unwrap","is","errorMod","eq","error","meta","createTypeUnsafe"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/types/metadata/decorate/errors/index.js"],"sourcesContent":["import { isCodec, isU8a, lazyMethod, objectSpread, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from '../../../create/lazy.js';\nimport { objectNameToString } from '../util.js';\nexport function variantToMeta(lookup, variant) {\n    return objectSpread({ args: variant.fields.map(({ type }) => lookup.getTypeDef(type).type) }, variant);\n}\n/** @internal */\nexport function decorateErrors(registry, { lookup, pallets }, version) {\n    const result = {};\n    for (let i = 0; i < pallets.length; i++) {\n        const { errors, index, name } = pallets[i];\n        if (errors.isSome) {\n            const sectionIndex = version >= 12 ? index.toNumber() : i;\n            lazyMethod(result, stringCamelCase(name), () => lazyVariants(lookup, errors.unwrap(), objectNameToString, (variant) => ({\n                // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects\n                is: (errorMod) => isCodec(errorMod) &&\n                    isCodec(errorMod.index) &&\n                    errorMod.index.eq(sectionIndex) && (isU8a(errorMod.error)\n                    ? errorMod.error[0] === variant.index.toNumber()\n                    : isCodec(errorMod.error) && errorMod.error.eq(variant.index)),\n                meta: registry.createTypeUnsafe('ErrorMetadataLatest', [variantToMeta(lookup, variant)])\n            })));\n        }\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,YAAY,EAAEC,eAAe,QAAQ,gBAAgB;AAC1F,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,kBAAkB,QAAQ,YAAY;AAC/C,OAAO,SAASC,aAAaA,CAACC,MAAM,EAAEC,OAAO,EAAE;EAC3C,OAAON,YAAY,CAAC;IAAEO,IAAI,EAAED,OAAO,CAACE,MAAM,CAACC,GAAG,CAACC,IAAA;MAAA,IAAC;QAAEC;MAAK,CAAC,GAAAD,IAAA;MAAA,OAAKL,MAAM,CAACO,UAAU,CAACD,IAAI,CAAC,CAACA,IAAI;IAAA;EAAE,CAAC,EAAEL,OAAO,CAAC;AAC1G;AACA;AACA,OAAO,SAASO,cAAcA,CAACC,QAAQ,EAAAC,KAAA,EAAuBC,OAAO,EAAE;EAAA,IAA9B;IAAEX,MAAM;IAAEY;EAAQ,CAAC,GAAAF,KAAA;EACxD,MAAMG,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAM;MAAEE,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGN,OAAO,CAACE,CAAC,CAAC;IAC1C,IAAIE,MAAM,CAACG,MAAM,EAAE;MACf,MAAMC,YAAY,GAAGT,OAAO,IAAI,EAAE,GAAGM,KAAK,CAACI,QAAQ,EAAE,GAAGP,CAAC;MACzDpB,UAAU,CAACmB,MAAM,EAAEjB,eAAe,CAACsB,IAAI,CAAC,EAAE,MAAMrB,YAAY,CAACG,MAAM,EAAEgB,MAAM,CAACM,MAAM,EAAE,EAAExB,kBAAkB,EAAGG,OAAO,KAAM;QACpH;QACAsB,EAAE,EAAGC,QAAQ,IAAKhC,OAAO,CAACgC,QAAQ,CAAC,IAC/BhC,OAAO,CAACgC,QAAQ,CAACP,KAAK,CAAC,IACvBO,QAAQ,CAACP,KAAK,CAACQ,EAAE,CAACL,YAAY,CAAC,KAAK3B,KAAK,CAAC+B,QAAQ,CAACE,KAAK,CAAC,GACvDF,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC,KAAKzB,OAAO,CAACgB,KAAK,CAACI,QAAQ,EAAE,GAC9C7B,OAAO,CAACgC,QAAQ,CAACE,KAAK,CAAC,IAAIF,QAAQ,CAACE,KAAK,CAACD,EAAE,CAACxB,OAAO,CAACgB,KAAK,CAAC,CAAC;QAClEU,IAAI,EAAElB,QAAQ,CAACmB,gBAAgB,CAAC,qBAAqB,EAAE,CAAC7B,aAAa,CAACC,MAAM,EAAEC,OAAO,CAAC,CAAC;MAC3F,CAAC,CAAC,CAAC,CAAC;IACR;EACJ;EACA,OAAOY,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}