{"ast":null,"code":"import { map, of, switchMap } from 'rxjs';\nimport { BN_ZERO, isFunction } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nimport { getImageHashBounded } from './util.js';\nfunction isDemocracyPreimage(api, imageOpt) {\n  return !!imageOpt && !api.query.democracy.dispatchQueue;\n}\nfunction constructProposal(api, _ref) {\n  let [bytes, proposer, balance, at] = _ref;\n  let proposal;\n  try {\n    proposal = api.registry.createType('Call', bytes.toU8a(true));\n  } catch (error) {\n    console.error(error);\n  }\n  return {\n    at,\n    balance,\n    proposal,\n    proposer\n  };\n}\nfunction parseDemocracy(api, imageOpt) {\n  if (imageOpt.isNone) {\n    return;\n  }\n  if (isDemocracyPreimage(api, imageOpt)) {\n    const status = imageOpt.unwrap();\n    if (status.isMissing) {\n      return;\n    }\n    const {\n      data,\n      deposit,\n      provider,\n      since\n    } = status.asAvailable;\n    return constructProposal(api, [data, provider, deposit, since]);\n  }\n  return constructProposal(api, imageOpt.unwrap());\n}\nfunction parseImage(api, _ref2) {\n  let [proposalHash, status, bytes] = _ref2;\n  if (!status) {\n    return undefined;\n  }\n  const [proposer, balance] = status.isUnrequested ? status.asUnrequested.deposit : status.asRequested.deposit.unwrapOrDefault();\n  let proposal;\n  if (bytes) {\n    try {\n      proposal = api.registry.createType('Call', bytes.toU8a(true));\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return {\n    at: BN_ZERO,\n    balance,\n    proposal,\n    proposalHash,\n    proposer\n  };\n}\nfunction getDemocracyImages(api, bounded) {\n  const hashes = bounded.map(b => getImageHashBounded(b));\n  return api.query.democracy.preimages.multi(hashes).pipe(map(images => images.map(imageOpt => parseDemocracy(api, imageOpt))));\n}\nfunction getImages(api, bounded) {\n  const hashes = bounded.map(b => getImageHashBounded(b));\n  const bytesType = api.registry.lookup.getTypeDef(api.query.preimage.preimageFor.creator.meta.type.asMap.key).type;\n  return api.query.preimage.statusFor.multi(hashes).pipe(switchMap(optStatus => {\n    const statuses = optStatus.map(o => o.unwrapOr(null));\n    const keys = statuses.map((s, i) => s ? bytesType === 'H256'\n    // first generation\n    ? hashes[i]\n    // current generation (H256,u32)\n    : s.isRequested ? [hashes[i], s.asRequested.len.unwrapOr(0)] : [hashes[i], s.asUnrequested.len] : null).filter(p => !!p);\n    return api.query.preimage.preimageFor.multi(keys).pipe(map(optBytes => {\n      let ptr = -1;\n      return statuses.map((s, i) => s ? [hashes[i], s, optBytes[++ptr].unwrapOr(null)] : [hashes[i], null, null]).map(v => parseImage(api, v));\n    }));\n  }));\n}\nexport function preimages(instanceId, api) {\n  return memo(instanceId, hashes => hashes.length ? isFunction(api.query.democracy.preimages) ? getDemocracyImages(api, hashes) : isFunction(api.query.preimage.preimageFor) ? getImages(api, hashes) : of([]) : of([]));\n}\nexport const preimage = /*#__PURE__*/firstMemo((api, hash) => api.derive.democracy.preimages([hash]));","map":{"version":3,"names":["map","of","switchMap","BN_ZERO","isFunction","firstMemo","memo","getImageHashBounded","isDemocracyPreimage","api","imageOpt","query","democracy","dispatchQueue","constructProposal","_ref","bytes","proposer","balance","at","proposal","registry","createType","toU8a","error","console","parseDemocracy","isNone","status","unwrap","isMissing","data","deposit","provider","since","asAvailable","parseImage","_ref2","proposalHash","undefined","isUnrequested","asUnrequested","asRequested","unwrapOrDefault","getDemocracyImages","bounded","hashes","b","preimages","multi","pipe","images","getImages","bytesType","lookup","getTypeDef","preimage","preimageFor","creator","meta","type","asMap","key","statusFor","optStatus","statuses","o","unwrapOr","keys","s","i","isRequested","len","filter","p","optBytes","ptr","v","instanceId","length","hash","derive"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/api-derive/democracy/preimages.js"],"sourcesContent":["import { map, of, switchMap } from 'rxjs';\nimport { BN_ZERO, isFunction } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nimport { getImageHashBounded } from './util.js';\nfunction isDemocracyPreimage(api, imageOpt) {\n    return !!imageOpt && !api.query.democracy.dispatchQueue;\n}\nfunction constructProposal(api, [bytes, proposer, balance, at]) {\n    let proposal;\n    try {\n        proposal = api.registry.createType('Call', bytes.toU8a(true));\n    }\n    catch (error) {\n        console.error(error);\n    }\n    return { at, balance, proposal, proposer };\n}\nfunction parseDemocracy(api, imageOpt) {\n    if (imageOpt.isNone) {\n        return;\n    }\n    if (isDemocracyPreimage(api, imageOpt)) {\n        const status = imageOpt.unwrap();\n        if (status.isMissing) {\n            return;\n        }\n        const { data, deposit, provider, since } = status.asAvailable;\n        return constructProposal(api, [data, provider, deposit, since]);\n    }\n    return constructProposal(api, imageOpt.unwrap());\n}\nfunction parseImage(api, [proposalHash, status, bytes]) {\n    if (!status) {\n        return undefined;\n    }\n    const [proposer, balance] = status.isUnrequested\n        ? status.asUnrequested.deposit\n        : status.asRequested.deposit.unwrapOrDefault();\n    let proposal;\n    if (bytes) {\n        try {\n            proposal = api.registry.createType('Call', bytes.toU8a(true));\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n    return { at: BN_ZERO, balance, proposal, proposalHash, proposer };\n}\nfunction getDemocracyImages(api, bounded) {\n    const hashes = bounded.map((b) => getImageHashBounded(b));\n    return api.query.democracy.preimages.multi(hashes).pipe(map((images) => images.map((imageOpt) => parseDemocracy(api, imageOpt))));\n}\nfunction getImages(api, bounded) {\n    const hashes = bounded.map((b) => getImageHashBounded(b));\n    const bytesType = api.registry.lookup.getTypeDef(api.query.preimage.preimageFor.creator.meta.type.asMap.key).type;\n    return api.query.preimage.statusFor.multi(hashes).pipe(switchMap((optStatus) => {\n        const statuses = optStatus.map((o) => o.unwrapOr(null));\n        const keys = statuses\n            .map((s, i) => s\n            ? bytesType === 'H256'\n                // first generation\n                ? hashes[i]\n                // current generation (H256,u32)\n                : s.isRequested\n                    ? [hashes[i], s.asRequested.len.unwrapOr(0)]\n                    : [hashes[i], s.asUnrequested.len]\n            : null)\n            .filter((p) => !!p);\n        return api.query.preimage.preimageFor.multi(keys).pipe(map((optBytes) => {\n            let ptr = -1;\n            return statuses\n                .map((s, i) => s\n                ? [hashes[i], s, optBytes[++ptr].unwrapOr(null)]\n                : [hashes[i], null, null])\n                .map((v) => parseImage(api, v));\n        }));\n    }));\n}\nexport function preimages(instanceId, api) {\n    return memo(instanceId, (hashes) => hashes.length\n        ? isFunction(api.query.democracy.preimages)\n            ? getDemocracyImages(api, hashes)\n            : isFunction(api.query.preimage.preimageFor)\n                ? getImages(api, hashes)\n                : of([])\n        : of([]));\n}\nexport const preimage = /*#__PURE__*/ firstMemo((api, hash) => api.derive.democracy.preimages([hash]));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}