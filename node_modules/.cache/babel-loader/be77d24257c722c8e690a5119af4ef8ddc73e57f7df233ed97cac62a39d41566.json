{"ast":null,"code":"var _DeriveJunction_chainCode, _DeriveJunction_isHard;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { BN, bnToU8a, compactAddLength, hexToU8a, isBigInt, isBn, isHex, isNumber, isString, stringToU8a } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nimport { BN_LE_256_OPTS } from '../bn.js';\nconst RE_NUMBER = /^\\d+$/;\nconst JUNCTION_ID_LEN = 32;\nexport class DeriveJunction {\n  constructor() {\n    _DeriveJunction_chainCode.set(this, new Uint8Array(32));\n    _DeriveJunction_isHard.set(this, false);\n  }\n  static from(value) {\n    const result = new DeriveJunction();\n    const [code, isHard] = value.startsWith('/') ? [value.substring(1), true] : [value, false];\n    result.soft(RE_NUMBER.test(code) ? new BN(code, 10) : code);\n    return isHard ? result.harden() : result;\n  }\n  get chainCode() {\n    return __classPrivateFieldGet(this, _DeriveJunction_chainCode, \"f\");\n  }\n  get isHard() {\n    return __classPrivateFieldGet(this, _DeriveJunction_isHard, \"f\");\n  }\n  get isSoft() {\n    return !__classPrivateFieldGet(this, _DeriveJunction_isHard, \"f\");\n  }\n  hard(value) {\n    return this.soft(value).harden();\n  }\n  harden() {\n    __classPrivateFieldSet(this, _DeriveJunction_isHard, true, \"f\");\n    return this;\n  }\n  soft(value) {\n    if (isNumber(value) || isBn(value) || isBigInt(value)) {\n      return this.soft(bnToU8a(value, BN_LE_256_OPTS));\n    } else if (isHex(value)) {\n      return this.soft(hexToU8a(value));\n    } else if (isString(value)) {\n      return this.soft(compactAddLength(stringToU8a(value)));\n    } else if (value.length > JUNCTION_ID_LEN) {\n      return this.soft(blake2AsU8a(value));\n    }\n    __classPrivateFieldGet(this, _DeriveJunction_chainCode, \"f\").fill(0);\n    __classPrivateFieldGet(this, _DeriveJunction_chainCode, \"f\").set(value, 0);\n    return this;\n  }\n  soften() {\n    __classPrivateFieldSet(this, _DeriveJunction_isHard, false, \"f\");\n    return this;\n  }\n}\n_DeriveJunction_chainCode = new WeakMap(), _DeriveJunction_isHard = new WeakMap();","map":{"version":3,"names":["_DeriveJunction_chainCode","_DeriveJunction_isHard","__classPrivateFieldGet","__classPrivateFieldSet","BN","bnToU8a","compactAddLength","hexToU8a","isBigInt","isBn","isHex","isNumber","isString","stringToU8a","blake2AsU8a","BN_LE_256_OPTS","RE_NUMBER","JUNCTION_ID_LEN","DeriveJunction","constructor","set","Uint8Array","from","value","result","code","isHard","startsWith","substring","soft","test","harden","chainCode","isSoft","hard","length","fill","soften","WeakMap"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/util-crypto/key/DeriveJunction.js"],"sourcesContent":["var _DeriveJunction_chainCode, _DeriveJunction_isHard;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { BN, bnToU8a, compactAddLength, hexToU8a, isBigInt, isBn, isHex, isNumber, isString, stringToU8a } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nimport { BN_LE_256_OPTS } from '../bn.js';\nconst RE_NUMBER = /^\\d+$/;\nconst JUNCTION_ID_LEN = 32;\nexport class DeriveJunction {\n    constructor() {\n        _DeriveJunction_chainCode.set(this, new Uint8Array(32));\n        _DeriveJunction_isHard.set(this, false);\n    }\n    static from(value) {\n        const result = new DeriveJunction();\n        const [code, isHard] = value.startsWith('/')\n            ? [value.substring(1), true]\n            : [value, false];\n        result.soft(RE_NUMBER.test(code)\n            ? new BN(code, 10)\n            : code);\n        return isHard\n            ? result.harden()\n            : result;\n    }\n    get chainCode() {\n        return __classPrivateFieldGet(this, _DeriveJunction_chainCode, \"f\");\n    }\n    get isHard() {\n        return __classPrivateFieldGet(this, _DeriveJunction_isHard, \"f\");\n    }\n    get isSoft() {\n        return !__classPrivateFieldGet(this, _DeriveJunction_isHard, \"f\");\n    }\n    hard(value) {\n        return this.soft(value).harden();\n    }\n    harden() {\n        __classPrivateFieldSet(this, _DeriveJunction_isHard, true, \"f\");\n        return this;\n    }\n    soft(value) {\n        if (isNumber(value) || isBn(value) || isBigInt(value)) {\n            return this.soft(bnToU8a(value, BN_LE_256_OPTS));\n        }\n        else if (isHex(value)) {\n            return this.soft(hexToU8a(value));\n        }\n        else if (isString(value)) {\n            return this.soft(compactAddLength(stringToU8a(value)));\n        }\n        else if (value.length > JUNCTION_ID_LEN) {\n            return this.soft(blake2AsU8a(value));\n        }\n        __classPrivateFieldGet(this, _DeriveJunction_chainCode, \"f\").fill(0);\n        __classPrivateFieldGet(this, _DeriveJunction_chainCode, \"f\").set(value, 0);\n        return this;\n    }\n    soften() {\n        __classPrivateFieldSet(this, _DeriveJunction_isHard, false, \"f\");\n        return this;\n    }\n}\n_DeriveJunction_chainCode = new WeakMap(), _DeriveJunction_isHard = new WeakMap();\n"],"mappings":"AAAA,IAAIA,yBAAyB,EAAEC,sBAAsB;AACrD,SAASC,sBAAsB,EAAEC,sBAAsB,QAAQ,OAAO;AACtE,SAASC,EAAE,EAAEC,OAAO,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,gBAAgB;AAChI,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,cAAc,QAAQ,UAAU;AACzC,MAAMC,SAAS,GAAG,OAAO;AACzB,MAAMC,eAAe,GAAG,EAAE;AAC1B,OAAO,MAAMC,cAAc,CAAC;EACxBC,WAAWA,CAAA,EAAG;IACVnB,yBAAyB,CAACoB,GAAG,CAAC,IAAI,EAAE,IAAIC,UAAU,CAAC,EAAE,CAAC,CAAC;IACvDpB,sBAAsB,CAACmB,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;EAC3C;EACA,OAAOE,IAAIA,CAACC,KAAK,EAAE;IACf,MAAMC,MAAM,GAAG,IAAIN,cAAc,EAAE;IACnC,MAAM,CAACO,IAAI,EAAEC,MAAM,CAAC,GAAGH,KAAK,CAACI,UAAU,CAAC,GAAG,CAAC,GACtC,CAACJ,KAAK,CAACK,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAC1B,CAACL,KAAK,EAAE,KAAK,CAAC;IACpBC,MAAM,CAACK,IAAI,CAACb,SAAS,CAACc,IAAI,CAACL,IAAI,CAAC,GAC1B,IAAIrB,EAAE,CAACqB,IAAI,EAAE,EAAE,CAAC,GAChBA,IAAI,CAAC;IACX,OAAOC,MAAM,GACPF,MAAM,CAACO,MAAM,EAAE,GACfP,MAAM;EAChB;EACA,IAAIQ,SAASA,CAAA,EAAG;IACZ,OAAO9B,sBAAsB,CAAC,IAAI,EAAEF,yBAAyB,EAAE,GAAG,CAAC;EACvE;EACA,IAAI0B,MAAMA,CAAA,EAAG;IACT,OAAOxB,sBAAsB,CAAC,IAAI,EAAED,sBAAsB,EAAE,GAAG,CAAC;EACpE;EACA,IAAIgC,MAAMA,CAAA,EAAG;IACT,OAAO,CAAC/B,sBAAsB,CAAC,IAAI,EAAED,sBAAsB,EAAE,GAAG,CAAC;EACrE;EACAiC,IAAIA,CAACX,KAAK,EAAE;IACR,OAAO,IAAI,CAACM,IAAI,CAACN,KAAK,CAAC,CAACQ,MAAM,EAAE;EACpC;EACAA,MAAMA,CAAA,EAAG;IACL5B,sBAAsB,CAAC,IAAI,EAAEF,sBAAsB,EAAE,IAAI,EAAE,GAAG,CAAC;IAC/D,OAAO,IAAI;EACf;EACA4B,IAAIA,CAACN,KAAK,EAAE;IACR,IAAIZ,QAAQ,CAACY,KAAK,CAAC,IAAId,IAAI,CAACc,KAAK,CAAC,IAAIf,QAAQ,CAACe,KAAK,CAAC,EAAE;MACnD,OAAO,IAAI,CAACM,IAAI,CAACxB,OAAO,CAACkB,KAAK,EAAER,cAAc,CAAC,CAAC;IACpD,CAAC,MACI,IAAIL,KAAK,CAACa,KAAK,CAAC,EAAE;MACnB,OAAO,IAAI,CAACM,IAAI,CAACtB,QAAQ,CAACgB,KAAK,CAAC,CAAC;IACrC,CAAC,MACI,IAAIX,QAAQ,CAACW,KAAK,CAAC,EAAE;MACtB,OAAO,IAAI,CAACM,IAAI,CAACvB,gBAAgB,CAACO,WAAW,CAACU,KAAK,CAAC,CAAC,CAAC;IAC1D,CAAC,MACI,IAAIA,KAAK,CAACY,MAAM,GAAGlB,eAAe,EAAE;MACrC,OAAO,IAAI,CAACY,IAAI,CAACf,WAAW,CAACS,KAAK,CAAC,CAAC;IACxC;IACArB,sBAAsB,CAAC,IAAI,EAAEF,yBAAyB,EAAE,GAAG,CAAC,CAACoC,IAAI,CAAC,CAAC,CAAC;IACpElC,sBAAsB,CAAC,IAAI,EAAEF,yBAAyB,EAAE,GAAG,CAAC,CAACoB,GAAG,CAACG,KAAK,EAAE,CAAC,CAAC;IAC1E,OAAO,IAAI;EACf;EACAc,MAAMA,CAAA,EAAG;IACLlC,sBAAsB,CAAC,IAAI,EAAEF,sBAAsB,EAAE,KAAK,EAAE,GAAG,CAAC;IAChE,OAAO,IAAI;EACf;AACJ;AACAD,yBAAyB,GAAG,IAAIsC,OAAO,EAAE,EAAErC,sBAAsB,GAAG,IAAIqC,OAAO,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}