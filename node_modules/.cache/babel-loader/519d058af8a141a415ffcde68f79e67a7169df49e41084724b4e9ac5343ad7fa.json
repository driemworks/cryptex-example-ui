{"ast":null,"code":"import '@polkadot/x-bigint/shim';\nimport { utils as utilsNobleSecp256k1 } from '@noble/secp256k1';\nimport { u8aConcat } from '@polkadot/util';\nimport { hmacSha256AsU8a } from './hmac/index.js';\nimport { cryptoWaitReady } from './crypto.js';\nutilsNobleSecp256k1.hmacSha256Sync = function (key) {\n  for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    messages[_key - 1] = arguments[_key];\n  }\n  return hmacSha256AsU8a(key, u8aConcat(...messages));\n};\ncryptoWaitReady().catch(() => {\n  // shouldn't happen, logged and caught inside cryptoWaitReady\n});","map":{"version":3,"names":["utils","utilsNobleSecp256k1","u8aConcat","hmacSha256AsU8a","cryptoWaitReady","hmacSha256Sync","key","_len","arguments","length","messages","Array","_key","catch"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/util-crypto/bundleInit.js"],"sourcesContent":["import '@polkadot/x-bigint/shim';\nimport { utils as utilsNobleSecp256k1 } from '@noble/secp256k1';\nimport { u8aConcat } from '@polkadot/util';\nimport { hmacSha256AsU8a } from './hmac/index.js';\nimport { cryptoWaitReady } from './crypto.js';\nutilsNobleSecp256k1.hmacSha256Sync = (key, ...messages) => hmacSha256AsU8a(key, u8aConcat(...messages));\ncryptoWaitReady().catch(() => {\n    // shouldn't happen, logged and caught inside cryptoWaitReady\n});\n"],"mappings":"AAAA,OAAO,yBAAyB;AAChC,SAASA,KAAK,IAAIC,mBAAmB,QAAQ,kBAAkB;AAC/D,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,eAAe,QAAQ,aAAa;AAC7CH,mBAAmB,CAACI,cAAc,GAAG,UAACC,GAAG;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAKC,QAAQ,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAARF,QAAQ,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAAA,OAAKT,eAAe,CAACG,GAAG,EAAEJ,SAAS,CAAC,GAAGQ,QAAQ,CAAC,CAAC;AAAA;AACvGN,eAAe,EAAE,CAACS,KAAK,CAAC,MAAM;EAC1B;AAAA,CACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}