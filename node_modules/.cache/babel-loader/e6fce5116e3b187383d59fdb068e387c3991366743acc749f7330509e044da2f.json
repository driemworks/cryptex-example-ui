{"ast":null,"code":"import { isU8a, u8aToHex } from '@polkadot/util';\n/**\n * @name bool\n * @description\n * Representation for a boolean value in the system. It extends the base JS `Boolean` class\n * @noInheritDoc\n */\nexport class bool extends Boolean {\n  constructor(registry) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    super(isU8a(value) ? value[0] === 1 : value instanceof Boolean ? value.valueOf() : !!value);\n    this.initialU8aLength = 1;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n  get encodedLength() {\n    return 1;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value (true when it wraps false/default)\n   */\n  get isEmpty() {\n    return this.isFalse;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n  get isFalse() {\n    return !this.isTrue;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n  get isTrue() {\n    return this.valueOf();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n  eq(other) {\n    return this.valueOf() === (other instanceof Boolean ? other.valueOf() : other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n  toJSON() {\n    return this.valueOf();\n  }\n  /**\n   * @description Converts the value in a best-fit primitive form\n   */\n  toPrimitive() {\n    return this.toJSON();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n  toRawType() {\n    return 'bool';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n  toString() {\n    return this.toJSON().toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   */\n  toU8a(_isBare) {\n    return new Uint8Array([this.valueOf() ? 1 : 0]);\n  }\n}","map":{"version":3,"names":["isU8a","u8aToHex","bool","Boolean","constructor","registry","value","arguments","length","undefined","valueOf","initialU8aLength","encodedLength","hash","toU8a","isEmpty","isFalse","isTrue","eq","other","inspect","outer","toHex","toHuman","toJSON","toPrimitive","toRawType","toString","_isBare","Uint8Array"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/types-codec/native/Bool.js"],"sourcesContent":["import { isU8a, u8aToHex } from '@polkadot/util';\n/**\n * @name bool\n * @description\n * Representation for a boolean value in the system. It extends the base JS `Boolean` class\n * @noInheritDoc\n */\nexport class bool extends Boolean {\n    constructor(registry, value = false) {\n        super(isU8a(value)\n            ? value[0] === 1\n            : value instanceof Boolean\n                ? value.valueOf()\n                : !!value);\n        this.initialU8aLength = 1;\n        this.registry = registry;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return 1;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value (true when it wraps false/default)\n     */\n    get isEmpty() {\n        return this.isFalse;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isFalse() {\n        return !this.isTrue;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isTrue() {\n        return this.valueOf();\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.valueOf() === (other instanceof Boolean\n            ? other.valueOf()\n            : other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.valueOf();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'bool';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.toJSON().toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return new Uint8Array([this.valueOf() ? 1 : 0]);\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,SAASC,OAAO,CAAC;EAC9BC,WAAWA,CAACC,QAAQ,EAAiB;IAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IAC/B,KAAK,CAACP,KAAK,CAACM,KAAK,CAAC,GACZA,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GACdA,KAAK,YAAYH,OAAO,GACpBG,KAAK,CAACI,OAAO,EAAE,GACf,CAAC,CAACJ,KAAK,CAAC;IAClB,IAAI,CAACK,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACN,QAAQ,GAAGA,QAAQ;EAC5B;EACA;AACJ;AACA;EACI,IAAIO,aAAaA,CAAA,EAAG;IAChB,OAAO,CAAC;EACZ;EACA;AACJ;AACA;EACI,IAAIC,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACR,QAAQ,CAACQ,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE,CAAC;EAC3C;EACA;AACJ;AACA;EACI,IAAIC,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACC,OAAO;EACvB;EACA;AACJ;AACA;EACI,IAAIA,OAAOA,CAAA,EAAG;IACV,OAAO,CAAC,IAAI,CAACC,MAAM;EACvB;EACA;AACJ;AACA;EACI,IAAIA,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACP,OAAO,EAAE;EACzB;EACA;AACJ;AACA;EACIQ,EAAEA,CAACC,KAAK,EAAE;IACN,OAAO,IAAI,CAACT,OAAO,EAAE,MAAMS,KAAK,YAAYhB,OAAO,GAC7CgB,KAAK,CAACT,OAAO,EAAE,GACfS,KAAK,CAAC;EAChB;EACA;AACJ;AACA;EACIC,OAAOA,CAAA,EAAG;IACN,OAAO;MACHC,KAAK,EAAE,CAAC,IAAI,CAACP,KAAK,EAAE;IACxB,CAAC;EACL;EACA;AACJ;AACA;EACIQ,KAAKA,CAAA,EAAG;IACJ,OAAOrB,QAAQ,CAAC,IAAI,CAACa,KAAK,EAAE,CAAC;EACjC;EACA;AACJ;AACA;EACIS,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAACC,MAAM,EAAE;EACxB;EACA;AACJ;AACA;EACIA,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAACd,OAAO,EAAE;EACzB;EACA;AACJ;AACA;EACIe,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAACD,MAAM,EAAE;EACxB;EACA;AACJ;AACA;EACIE,SAASA,CAAA,EAAG;IACR,OAAO,MAAM;EACjB;EACA;AACJ;AACA;EACIC,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACH,MAAM,EAAE,CAACG,QAAQ,EAAE;EACnC;EACA;AACJ;AACA;EACIb,KAAKA,CAACc,OAAO,EAAE;IACX,OAAO,IAAIC,UAAU,CAAC,CAAC,IAAI,CAACnB,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACnD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}