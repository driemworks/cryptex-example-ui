{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isHex, u8aToString } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nconst UNDEF_HEX = {\n  toHex: () => undefined\n};\nfunction dataAsString(data) {\n  return data.isRaw ? u8aToString(data.asRaw.toU8a(true)) : data.isNone ? undefined : data.toHex();\n}\nfunction extractOther(additional) {\n  return additional.reduce((other, _ref) => {\n    let [_key, _value] = _ref;\n    const key = dataAsString(_key);\n    const value = dataAsString(_value);\n    if (key && value) {\n      other[key] = value;\n    }\n    return other;\n  }, {});\n}\nfunction extractIdentity(identityOfOpt, superOf) {\n  if (!identityOfOpt?.isSome) {\n    return {\n      judgements: []\n    };\n  }\n  const {\n    info,\n    judgements\n  } = identityOfOpt.unwrap();\n  const topDisplay = dataAsString(info.display);\n  return {\n    display: superOf && dataAsString(superOf[1]) || topDisplay,\n    displayParent: superOf && topDisplay,\n    email: dataAsString(info.email),\n    image: dataAsString(info.image),\n    judgements,\n    legal: dataAsString(info.legal),\n    other: extractOther(info.additional),\n    parent: superOf && superOf[0],\n    pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),\n    riot: dataAsString(info.riot),\n    twitter: dataAsString(info.twitter),\n    web: dataAsString(info.web)\n  };\n}\nfunction getParent(api, identityOfOpt, superOfOpt) {\n  if (identityOfOpt?.isSome) {\n    // this identity has something set\n    return of([identityOfOpt, undefined]);\n  } else if (superOfOpt?.isSome) {\n    const superOf = superOfOpt.unwrap();\n    return combineLatest([api.derive.accounts._identity(superOf[0]).pipe(map(_ref2 => {\n      let [info] = _ref2;\n      return info;\n    })), of(superOf)]);\n  }\n  // nothing of value returned\n  return of([undefined, undefined]);\n}\nexport function _identity(instanceId, api) {\n  return memo(instanceId, accountId => accountId && api.query.identity?.identityOf ? combineLatest([api.query.identity.identityOf(accountId), api.query.identity.superOf(accountId)]) : of([undefined, undefined]));\n}\n/**\n * @name identity\n * @description Returns identity info for an account\n */\nexport function identity(instanceId, api) {\n  return memo(instanceId, accountId => api.derive.accounts._identity(accountId).pipe(switchMap(_ref3 => {\n    let [identityOfOpt, superOfOpt] = _ref3;\n    return getParent(api, identityOfOpt, superOfOpt);\n  }), map(_ref4 => {\n    let [identityOfOpt, superOf] = _ref4;\n    return extractIdentity(identityOfOpt, superOf);\n  })));\n}\nexport const hasIdentity = /*#__PURE__*/firstMemo((api, accountId) => api.derive.accounts.hasIdentityMulti([accountId]));\nexport function hasIdentityMulti(instanceId, api) {\n  return memo(instanceId, accountIds => api.query.identity?.identityOf ? combineLatest([api.query.identity.identityOf.multi(accountIds), api.query.identity.superOf.multi(accountIds)]).pipe(map(_ref5 => {\n    let [identities, supers] = _ref5;\n    return identities.map((identityOfOpt, index) => {\n      const superOfOpt = supers[index];\n      const parentId = superOfOpt && superOfOpt.isSome ? superOfOpt.unwrap()[0].toString() : undefined;\n      let display;\n      if (identityOfOpt && identityOfOpt.isSome) {\n        const value = dataAsString(identityOfOpt.unwrap().info.display);\n        if (value && !isHex(value)) {\n          display = value;\n        }\n      }\n      return {\n        display,\n        hasIdentity: !!(display || parentId),\n        parentId\n      };\n    });\n  })) : of(accountIds.map(() => ({\n    hasIdentity: false\n  }))));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","isHex","u8aToString","firstMemo","memo","UNDEF_HEX","toHex","undefined","dataAsString","data","isRaw","asRaw","toU8a","isNone","extractOther","additional","reduce","other","_ref","_key","_value","key","value","extractIdentity","identityOfOpt","superOf","isSome","judgements","info","unwrap","topDisplay","display","displayParent","email","image","legal","parent","pgp","pgpFingerprint","unwrapOr","riot","twitter","web","getParent","api","superOfOpt","derive","accounts","_identity","pipe","_ref2","instanceId","accountId","query","identity","identityOf","_ref3","_ref4","hasIdentity","hasIdentityMulti","accountIds","multi","_ref5","identities","supers","index","parentId","toString"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/api-derive/accounts/identity.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isHex, u8aToString } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nconst UNDEF_HEX = { toHex: () => undefined };\nfunction dataAsString(data) {\n    return data.isRaw\n        ? u8aToString(data.asRaw.toU8a(true))\n        : data.isNone\n            ? undefined\n            : data.toHex();\n}\nfunction extractOther(additional) {\n    return additional.reduce((other, [_key, _value]) => {\n        const key = dataAsString(_key);\n        const value = dataAsString(_value);\n        if (key && value) {\n            other[key] = value;\n        }\n        return other;\n    }, {});\n}\nfunction extractIdentity(identityOfOpt, superOf) {\n    if (!identityOfOpt?.isSome) {\n        return { judgements: [] };\n    }\n    const { info, judgements } = identityOfOpt.unwrap();\n    const topDisplay = dataAsString(info.display);\n    return {\n        display: (superOf && dataAsString(superOf[1])) || topDisplay,\n        displayParent: superOf && topDisplay,\n        email: dataAsString(info.email),\n        image: dataAsString(info.image),\n        judgements,\n        legal: dataAsString(info.legal),\n        other: extractOther(info.additional),\n        parent: superOf && superOf[0],\n        pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),\n        riot: dataAsString(info.riot),\n        twitter: dataAsString(info.twitter),\n        web: dataAsString(info.web)\n    };\n}\nfunction getParent(api, identityOfOpt, superOfOpt) {\n    if (identityOfOpt?.isSome) {\n        // this identity has something set\n        return of([identityOfOpt, undefined]);\n    }\n    else if (superOfOpt?.isSome) {\n        const superOf = superOfOpt.unwrap();\n        return combineLatest([\n            api.derive.accounts._identity(superOf[0]).pipe(map(([info]) => info)),\n            of(superOf)\n        ]);\n    }\n    // nothing of value returned\n    return of([undefined, undefined]);\n}\nexport function _identity(instanceId, api) {\n    return memo(instanceId, (accountId) => accountId && api.query.identity?.identityOf\n        ? combineLatest([\n            api.query.identity.identityOf(accountId),\n            api.query.identity.superOf(accountId)\n        ])\n        : of([undefined, undefined]));\n}\n/**\n * @name identity\n * @description Returns identity info for an account\n */\nexport function identity(instanceId, api) {\n    return memo(instanceId, (accountId) => api.derive.accounts._identity(accountId).pipe(switchMap(([identityOfOpt, superOfOpt]) => getParent(api, identityOfOpt, superOfOpt)), map(([identityOfOpt, superOf]) => extractIdentity(identityOfOpt, superOf))));\n}\nexport const hasIdentity = /*#__PURE__*/ firstMemo((api, accountId) => api.derive.accounts.hasIdentityMulti([accountId]));\nexport function hasIdentityMulti(instanceId, api) {\n    return memo(instanceId, (accountIds) => api.query.identity?.identityOf\n        ? combineLatest([\n            api.query.identity.identityOf.multi(accountIds),\n            api.query.identity.superOf.multi(accountIds)\n        ]).pipe(map(([identities, supers]) => identities.map((identityOfOpt, index) => {\n            const superOfOpt = supers[index];\n            const parentId = superOfOpt && superOfOpt.isSome\n                ? superOfOpt.unwrap()[0].toString()\n                : undefined;\n            let display;\n            if (identityOfOpt && identityOfOpt.isSome) {\n                const value = dataAsString(identityOfOpt.unwrap().info.display);\n                if (value && !isHex(value)) {\n                    display = value;\n                }\n            }\n            return { display, hasIdentity: !!(display || parentId), parentId };\n        })))\n        : of(accountIds.map(() => ({ hasIdentity: false }))));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}