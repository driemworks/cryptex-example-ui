{"ast":null,"code":"import { objectSpread } from '@polkadot/util';\nconst sharedTypes = {\n  // Anchor\n  AnchorData: {\n    anchoredBlock: 'u64',\n    docRoot: 'H256',\n    id: 'H256'\n  },\n  DispatchErrorModule: 'DispatchErrorModuleU8',\n  PreCommitData: {\n    expirationBlock: 'u64',\n    identity: 'H256',\n    signingRoot: 'H256'\n  },\n  // Fees\n  Fee: {\n    key: 'Hash',\n    price: 'Balance'\n  },\n  // MultiAccount\n  MultiAccountData: {\n    deposit: 'Balance',\n    depositor: 'AccountId',\n    signatories: 'Vec<AccountId>',\n    threshold: 'u16'\n  },\n  // Bridge\n  ChainId: 'u8',\n  DepositNonce: 'u64',\n  ResourceId: '[u8; 32]',\n  'chainbridge::ChainId': 'u8',\n  // NFT\n  RegistryId: 'H160',\n  TokenId: 'U256',\n  AssetId: {\n    registryId: 'RegistryId',\n    tokenId: 'TokenId'\n  },\n  AssetInfo: {\n    metadata: 'Bytes'\n  },\n  MintInfo: {\n    anchorId: 'Hash',\n    proofs: 'Vec<ProofMint>',\n    staticHashes: '[Hash; 3]'\n  },\n  Proof: {\n    leafHash: 'H256',\n    sortedHashes: 'H256'\n  },\n  ProofMint: {\n    hashes: 'Vec<Hash>',\n    property: 'Bytes',\n    salt: '[u8; 32]',\n    value: 'Bytes'\n  },\n  RegistryInfo: {\n    fields: 'Vec<Bytes>',\n    ownerCanBurn: 'bool'\n  },\n  ProxyType: {\n    _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'NonProxy']\n  }\n};\nconst standaloneTypes = objectSpread({}, sharedTypes, {\n  AccountInfo: 'AccountInfoWithRefCount',\n  Address: 'LookupSource',\n  LookupSource: 'IndicesLookupSource',\n  Multiplier: 'Fixed64',\n  RefCount: 'RefCountTo259'\n});\nconst versioned = [{\n  minmax: [240, 243],\n  types: objectSpread({}, standaloneTypes, {\n    ProxyType: {\n      _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'Vesting']\n    }\n  })\n}, {\n  minmax: [244, 999],\n  types: objectSpread({}, standaloneTypes)\n}, {\n  minmax: [1000, undefined],\n  types: objectSpread({}, sharedTypes)\n}];\nexport default versioned;","map":{"version":3,"names":["objectSpread","sharedTypes","AnchorData","anchoredBlock","docRoot","id","DispatchErrorModule","PreCommitData","expirationBlock","identity","signingRoot","Fee","key","price","MultiAccountData","deposit","depositor","signatories","threshold","ChainId","DepositNonce","ResourceId","RegistryId","TokenId","AssetId","registryId","tokenId","AssetInfo","metadata","MintInfo","anchorId","proofs","staticHashes","Proof","leafHash","sortedHashes","ProofMint","hashes","property","salt","value","RegistryInfo","fields","ownerCanBurn","ProxyType","_enum","standaloneTypes","AccountInfo","Address","LookupSource","Multiplier","RefCount","versioned","minmax","types","undefined"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/types-known/spec/centrifuge-chain.js"],"sourcesContent":["import { objectSpread } from '@polkadot/util';\nconst sharedTypes = {\n    // Anchor\n    AnchorData: {\n        anchoredBlock: 'u64',\n        docRoot: 'H256',\n        id: 'H256'\n    },\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    PreCommitData: {\n        expirationBlock: 'u64',\n        identity: 'H256',\n        signingRoot: 'H256'\n    },\n    // Fees\n    Fee: {\n        key: 'Hash',\n        price: 'Balance'\n    },\n    // MultiAccount\n    MultiAccountData: {\n        deposit: 'Balance',\n        depositor: 'AccountId',\n        signatories: 'Vec<AccountId>',\n        threshold: 'u16'\n    },\n    // Bridge\n    ChainId: 'u8',\n    DepositNonce: 'u64',\n    ResourceId: '[u8; 32]',\n    'chainbridge::ChainId': 'u8',\n    // NFT\n    RegistryId: 'H160',\n    TokenId: 'U256',\n    AssetId: {\n        registryId: 'RegistryId',\n        tokenId: 'TokenId'\n    },\n    AssetInfo: {\n        metadata: 'Bytes'\n    },\n    MintInfo: {\n        anchorId: 'Hash',\n        proofs: 'Vec<ProofMint>',\n        staticHashes: '[Hash; 3]'\n    },\n    Proof: {\n        leafHash: 'H256',\n        sortedHashes: 'H256'\n    },\n    ProofMint: {\n        hashes: 'Vec<Hash>',\n        property: 'Bytes',\n        salt: '[u8; 32]',\n        value: 'Bytes'\n    },\n    RegistryInfo: {\n        fields: 'Vec<Bytes>',\n        ownerCanBurn: 'bool'\n    },\n    ProxyType: {\n        _enum: [\n            'Any',\n            'NonTransfer',\n            'Governance',\n            'Staking',\n            'NonProxy'\n        ]\n    }\n};\nconst standaloneTypes = objectSpread({}, sharedTypes, {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'LookupSource',\n    LookupSource: 'IndicesLookupSource',\n    Multiplier: 'Fixed64',\n    RefCount: 'RefCountTo259'\n});\nconst versioned = [\n    {\n        minmax: [240, 243],\n        types: objectSpread({}, standaloneTypes, {\n            ProxyType: {\n                _enum: [\n                    'Any',\n                    'NonTransfer',\n                    'Governance',\n                    'Staking',\n                    'Vesting'\n                ]\n            }\n        })\n    },\n    {\n        minmax: [244, 999],\n        types: objectSpread({}, standaloneTypes)\n    },\n    {\n        minmax: [1000, undefined],\n        types: objectSpread({}, sharedTypes)\n    }\n];\nexport default versioned;\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C,MAAMC,WAAW,GAAG;EAChB;EACAC,UAAU,EAAE;IACRC,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE,MAAM;IACfC,EAAE,EAAE;EACR,CAAC;EACDC,mBAAmB,EAAE,uBAAuB;EAC5CC,aAAa,EAAE;IACXC,eAAe,EAAE,KAAK;IACtBC,QAAQ,EAAE,MAAM;IAChBC,WAAW,EAAE;EACjB,CAAC;EACD;EACAC,GAAG,EAAE;IACDC,GAAG,EAAE,MAAM;IACXC,KAAK,EAAE;EACX,CAAC;EACD;EACAC,gBAAgB,EAAE;IACdC,OAAO,EAAE,SAAS;IAClBC,SAAS,EAAE,WAAW;IACtBC,WAAW,EAAE,gBAAgB;IAC7BC,SAAS,EAAE;EACf,CAAC;EACD;EACAC,OAAO,EAAE,IAAI;EACbC,YAAY,EAAE,KAAK;EACnBC,UAAU,EAAE,UAAU;EACtB,sBAAsB,EAAE,IAAI;EAC5B;EACAC,UAAU,EAAE,MAAM;EAClBC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE;IACLC,UAAU,EAAE,YAAY;IACxBC,OAAO,EAAE;EACb,CAAC;EACDC,SAAS,EAAE;IACPC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACNC,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACHC,QAAQ,EAAE,MAAM;IAChBC,YAAY,EAAE;EAClB,CAAC;EACDC,SAAS,EAAE;IACPC,MAAM,EAAE,WAAW;IACnBC,QAAQ,EAAE,OAAO;IACjBC,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE;EACX,CAAC;EACDC,YAAY,EAAE;IACVC,MAAM,EAAE,YAAY;IACpBC,YAAY,EAAE;EAClB,CAAC;EACDC,SAAS,EAAE;IACPC,KAAK,EAAE,CACH,KAAK,EACL,aAAa,EACb,YAAY,EACZ,SAAS,EACT,UAAU;EAElB;AACJ,CAAC;AACD,MAAMC,eAAe,GAAG9C,YAAY,CAAC,CAAC,CAAC,EAAEC,WAAW,EAAE;EAClD8C,WAAW,EAAE,yBAAyB;EACtCC,OAAO,EAAE,cAAc;EACvBC,YAAY,EAAE,qBAAqB;EACnCC,UAAU,EAAE,SAAS;EACrBC,QAAQ,EAAE;AACd,CAAC,CAAC;AACF,MAAMC,SAAS,GAAG,CACd;EACIC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EAClBC,KAAK,EAAEtD,YAAY,CAAC,CAAC,CAAC,EAAE8C,eAAe,EAAE;IACrCF,SAAS,EAAE;MACPC,KAAK,EAAE,CACH,KAAK,EACL,aAAa,EACb,YAAY,EACZ,SAAS,EACT,SAAS;IAEjB;EACJ,CAAC;AACL,CAAC,EACD;EACIQ,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EAClBC,KAAK,EAAEtD,YAAY,CAAC,CAAC,CAAC,EAAE8C,eAAe;AAC3C,CAAC,EACD;EACIO,MAAM,EAAE,CAAC,IAAI,EAAEE,SAAS,CAAC;EACzBD,KAAK,EAAEtD,YAAY,CAAC,CAAC,CAAC,EAAEC,WAAW;AACvC,CAAC,CACJ;AACD,eAAemD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}