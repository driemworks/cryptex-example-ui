{"ast":null,"code":"import { hasBigInt } from '@polkadot/util';\nimport { bip39ToEntropy, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToEntropy as jsToEntropy } from './bip39.js';\nexport function mnemonicToEntropy(mnemonic, onlyJs) {\n  return !hasBigInt || !onlyJs && isReady() ? bip39ToEntropy(mnemonic) : jsToEntropy(mnemonic);\n}","map":{"version":3,"names":["hasBigInt","bip39ToEntropy","isReady","mnemonicToEntropy","jsToEntropy","mnemonic","onlyJs"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js"],"sourcesContent":["import { hasBigInt } from '@polkadot/util';\nimport { bip39ToEntropy, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToEntropy as jsToEntropy } from './bip39.js';\nexport function mnemonicToEntropy(mnemonic, onlyJs) {\n    return !hasBigInt || (!onlyJs && isReady())\n        ? bip39ToEntropy(mnemonic)\n        : jsToEntropy(mnemonic);\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,cAAc,EAAEC,OAAO,QAAQ,uBAAuB;AAC/D,SAASC,iBAAiB,IAAIC,WAAW,QAAQ,YAAY;AAC7D,OAAO,SAASD,iBAAiBA,CAACE,QAAQ,EAAEC,MAAM,EAAE;EAChD,OAAO,CAACN,SAAS,IAAK,CAACM,MAAM,IAAIJ,OAAO,EAAG,GACrCD,cAAc,CAACI,QAAQ,CAAC,GACxBD,WAAW,CAACC,QAAQ,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}