{"ast":null,"code":"import { catchError, combineLatest, map, of, switchMap } from 'rxjs';\nimport { isNumber, isUndefined } from '@polkadot/util';\nimport { unwrapBlockNumber } from '../util/index.js';\nimport { FALLBACK_MAX_HASH_COUNT, FALLBACK_PERIOD, MAX_FINALITY_LAG, MORTAL_PERIOD } from './constants.js';\nfunction latestNonce(api, address) {\n  return api.derive.balances.account(address).pipe(map(_ref => {\n    let {\n      accountNonce\n    } = _ref;\n    return accountNonce;\n  }));\n}\nfunction nextNonce(api, address) {\n  return api.rpc.system?.accountNextIndex ? api.rpc.system.accountNextIndex(address) : latestNonce(api, address);\n}\nfunction signingHeader(api) {\n  return combineLatest([api.rpc.chain.getHeader().pipe(switchMap(header =>\n  // check for chains at genesis (until block 1 is produced, e.g. 6s), since\n  // we do need to allow transactions at chain start (also dev/seal chains)\n  header.parentHash.isEmpty ? of(header)\n  // in the case of the current block, we use the parent to minimize the\n  // impact of forks on the system, but not completely remove it\n  : api.rpc.chain.getHeader(header.parentHash).pipe(catchError(() => of(header))))), api.rpc.chain.getFinalizedHead().pipe(switchMap(hash => api.rpc.chain.getHeader(hash).pipe(catchError(() => of(null)))))]).pipe(map(_ref2 => {\n    let [current, finalized] = _ref2;\n    return (\n      // determine the hash to use, current when lag > max, else finalized\n      !finalized || unwrapBlockNumber(current).sub(unwrapBlockNumber(finalized)).gt(MAX_FINALITY_LAG) ? current : finalized\n    );\n  }));\n}\nexport function signingInfo(_instanceId, api) {\n  // no memo, we want to do this fresh on each run\n  return (address, nonce, era) => combineLatest([\n  // retrieve nonce if none was specified\n  isUndefined(nonce) ? latestNonce(api, address) : nonce === -1 ? nextNonce(api, address) : of(api.registry.createType('Index', nonce)),\n  // if no era (create) or era > 0 (mortal), do block retrieval\n  isUndefined(era) || isNumber(era) && era > 0 ? signingHeader(api) : of(null)]).pipe(map(_ref3 => {\n    let [nonce, header] = _ref3;\n    return {\n      header,\n      mortalLength: Math.min(api.consts.system?.blockHashCount?.toNumber() || FALLBACK_MAX_HASH_COUNT, MORTAL_PERIOD.div(api.consts.babe?.expectedBlockTime || api.consts.timestamp?.minimumPeriod.muln(2) || FALLBACK_PERIOD).iadd(MAX_FINALITY_LAG).toNumber()),\n      nonce\n    };\n  }));\n}","map":{"version":3,"names":["catchError","combineLatest","map","of","switchMap","isNumber","isUndefined","unwrapBlockNumber","FALLBACK_MAX_HASH_COUNT","FALLBACK_PERIOD","MAX_FINALITY_LAG","MORTAL_PERIOD","latestNonce","api","address","derive","balances","account","pipe","_ref","accountNonce","nextNonce","rpc","system","accountNextIndex","signingHeader","chain","getHeader","header","parentHash","isEmpty","getFinalizedHead","hash","_ref2","current","finalized","sub","gt","signingInfo","_instanceId","nonce","era","registry","createType","_ref3","mortalLength","Math","min","consts","blockHashCount","toNumber","div","babe","expectedBlockTime","timestamp","minimumPeriod","muln","iadd"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/api-derive/tx/signingInfo.js"],"sourcesContent":["import { catchError, combineLatest, map, of, switchMap } from 'rxjs';\nimport { isNumber, isUndefined } from '@polkadot/util';\nimport { unwrapBlockNumber } from '../util/index.js';\nimport { FALLBACK_MAX_HASH_COUNT, FALLBACK_PERIOD, MAX_FINALITY_LAG, MORTAL_PERIOD } from './constants.js';\nfunction latestNonce(api, address) {\n    return api.derive.balances.account(address).pipe(map(({ accountNonce }) => accountNonce));\n}\nfunction nextNonce(api, address) {\n    return api.rpc.system?.accountNextIndex\n        ? api.rpc.system.accountNextIndex(address)\n        : latestNonce(api, address);\n}\nfunction signingHeader(api) {\n    return combineLatest([\n        api.rpc.chain.getHeader().pipe(switchMap((header) => \n        // check for chains at genesis (until block 1 is produced, e.g. 6s), since\n        // we do need to allow transactions at chain start (also dev/seal chains)\n        header.parentHash.isEmpty\n            ? of(header)\n            // in the case of the current block, we use the parent to minimize the\n            // impact of forks on the system, but not completely remove it\n            : api.rpc.chain.getHeader(header.parentHash).pipe(catchError(() => of(header))))),\n        api.rpc.chain.getFinalizedHead().pipe(switchMap((hash) => api.rpc.chain.getHeader(hash).pipe(catchError(() => of(null)))))\n    ]).pipe(map(([current, finalized]) => \n    // determine the hash to use, current when lag > max, else finalized\n    !finalized || unwrapBlockNumber(current).sub(unwrapBlockNumber(finalized)).gt(MAX_FINALITY_LAG)\n        ? current\n        : finalized));\n}\nexport function signingInfo(_instanceId, api) {\n    // no memo, we want to do this fresh on each run\n    return (address, nonce, era) => combineLatest([\n        // retrieve nonce if none was specified\n        isUndefined(nonce)\n            ? latestNonce(api, address)\n            : nonce === -1\n                ? nextNonce(api, address)\n                : of(api.registry.createType('Index', nonce)),\n        // if no era (create) or era > 0 (mortal), do block retrieval\n        (isUndefined(era) || (isNumber(era) && era > 0))\n            ? signingHeader(api)\n            : of(null)\n    ]).pipe(map(([nonce, header]) => ({\n        header,\n        mortalLength: Math.min(api.consts.system?.blockHashCount?.toNumber() || FALLBACK_MAX_HASH_COUNT, MORTAL_PERIOD\n            .div(api.consts.babe?.expectedBlockTime ||\n            api.consts.timestamp?.minimumPeriod.muln(2) ||\n            FALLBACK_PERIOD)\n            .iadd(MAX_FINALITY_LAG)\n            .toNumber()),\n        nonce\n    })));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}