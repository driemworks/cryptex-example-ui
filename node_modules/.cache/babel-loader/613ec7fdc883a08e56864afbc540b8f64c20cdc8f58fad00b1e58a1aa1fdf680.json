{"ast":null,"code":"var _jsxFileName = \"/home/driemworks/dkg/examples/react-wasm-client/src/App.js\",\n  _s = $RefreshSig$();\n/* global BigInt */\nimport './App.css';\nimport { w_keygen, w_calculate_secret, w_calculate_pubkey, w_combine_pubkeys, w_combine_secrets, w_encrypt, w_threshold_decrypt } from \"dkg\";\nimport { useWasm } from './useWasm';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // make sure the wasm blob is loaded\n  useWasm();\n  const [societySize, setSocietySize] = useState(0);\n  const [threshold, setThreshold] = useState(0);\n  const [society, setSociety] = useState([]);\n  const handleKeygen = () => {\n    // each participant must agree on two numbers\n    let r1 = 45432;\n    let r2 = 48484;\n    let results = [];\n    // each participant independently generates a polynomial and calulates their keys\n    for (let i = 0; i < societySize; i++) {\n      // generate random number \n      let r = 23;\n      let poly = w_keygen(BigInt(r), threshold);\n      let secret = w_calculate_secret(poly.coeffs);\n      console.log('sec ' + secret);\n      let pubkey = w_calculate_pubkey(BigInt(r1), BigInt(r2), secret);\n      results.push({\n        i: i,\n        pubkey: pubkey,\n        secret: secret\n      });\n    }\n    ;\n    setSociety(results);\n  };\n  const calculateGroupPublicKey = () => {\n    return society.reduce((a, b) => w_combine_pubkeys(a.pubkey, b.pubkey));\n  };\n  const calculateGroupSecretKey = () => {\n    return society.reduce((a, b) => w_combine_secrets(a.secret, b.secret));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"DKG Wasm Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generate keys, encrypt and decrypt messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: society.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Generate keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"society-size-input\",\n          children: \"Set number of participants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), societySize, /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"society-size-input\",\n          type: \"number\",\n          value: societySize,\n          onChange: e => setSocietySize(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"threshold-input\",\n          children: \"Set threshold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"threshold-input\",\n          type: \"number\",\n          value: threshold,\n          onChange: e => setThreshold(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleKeygen,\n          children: \" Keygen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"There are `\", society.length, \"` participants.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"The group secret key is `\", JSON.stringify(calculateGroupSecretKey()), \"` \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"The group public key is `\", JSON.stringify(calculateGroupPublicKey()), \"`\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9nt1V9eZ+wwY0MDXbHVmFU9P3dc=\", false, function () {\n  return [useWasm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["w_keygen","w_calculate_secret","w_calculate_pubkey","w_combine_pubkeys","w_combine_secrets","w_encrypt","w_threshold_decrypt","useWasm","useState","jsxDEV","_jsxDEV","App","_s","societySize","setSocietySize","threshold","setThreshold","society","setSociety","handleKeygen","r1","r2","results","i","r","poly","BigInt","secret","coeffs","console","log","pubkey","push","calculateGroupPublicKey","reduce","a","b","calculateGroupSecretKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","htmlFor","id","type","value","onChange","e","target","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/driemworks/dkg/examples/react-wasm-client/src/App.js"],"sourcesContent":["/* global BigInt */\r\nimport './App.css';\r\nimport { w_keygen, w_calculate_secret, \r\n    w_calculate_pubkey, w_combine_pubkeys,\r\n    w_combine_secrets, w_encrypt, w_threshold_decrypt\r\n} from \"dkg\";\r\nimport { useWasm } from './useWasm';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction App() {\r\n  // make sure the wasm blob is loaded\r\n  useWasm();\r\n\r\n  const [societySize, setSocietySize] = useState(0);\r\n  const [threshold, setThreshold] = useState(0);\r\n  const [society, setSociety] = useState([]);\r\n\r\n  const handleKeygen = () => {\r\n    // each participant must agree on two numbers\r\n    let r1 = 45432;\r\n    let r2 = 48484;\r\n    let results = [];\r\n    // each participant independently generates a polynomial and calulates their keys\r\n    for (let i = 0; i < societySize; i++) {\r\n      // generate random number \r\n      let r = 23;\r\n      let poly = w_keygen(BigInt(r), threshold);\r\n      let secret = w_calculate_secret(poly.coeffs);\r\n      console.log('sec ' + secret);\r\n      let pubkey = w_calculate_pubkey(BigInt(r1), BigInt(r2), secret)\r\n      results.push({\r\n        i: i,\r\n        pubkey: pubkey,\r\n        secret: secret,\r\n      });\r\n    };\r\n    setSociety(results);\r\n  }\r\n\r\n  const calculateGroupPublicKey = () => {\r\n    return society.reduce((a, b) => w_combine_pubkeys(a.pubkey, b.pubkey));\r\n  }\r\n\r\n  const calculateGroupSecretKey = () => {\r\n    return society.reduce((a, b) => w_combine_secrets(a.secret, b.secret));\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h2>DKG Wasm Example</h2>\r\n        <p>Generate keys, encrypt and decrypt messages</p>\r\n      </div>\r\n      <div className='body'>\r\n        { society.length === 0 ? \r\n        <div className='section'>\r\n          <span>\r\n            Generate keys\r\n          </span>\r\n          <label htmlFor='society-size-input'>Set number of participants</label>\r\n          {societySize}\r\n          <input id='society-size-input' type='number' value={societySize} onChange={(e) => setSocietySize(e.target.value)} />\r\n          <label htmlFor='threshold-input'>Set threshold</label>\r\n          <input id='threshold-input' type='number' value={threshold} onChange={(e) => setThreshold(e.target.value)} />\r\n          <button onClick={handleKeygen}> Keygen\r\n          </button>\r\n        </div>\r\n        : \r\n        <div className='section'>\r\n          <span>There are `{society.length}` participants.</span>\r\n          <span>The group secret key is `{JSON.stringify(calculateGroupSecretKey())}` </span>\r\n          <span>The group public key is `{JSON.stringify(calculateGroupPublicKey())}`</span>\r\n        </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}