{"ast":null,"code":"import knownSubstrate from '@substrate/ss58-registry';\nimport { knownGenesis, knownIcon, knownLedger, knownTestnet } from './defaults/index.js';\nconst UNSORTED = [0, 2, 42];\nconst TESTNETS = ['testnet'];\nfunction toExpanded(o) {\n  const network = o.network || '';\n  const nameParts = network.replace(/_/g, '-').split('-');\n  const n = o;\n  // ledger additions\n  n.slip44 = knownLedger[network];\n  n.hasLedgerSupport = !!n.slip44;\n  // general items\n  n.genesisHash = knownGenesis[network] || [];\n  n.icon = knownIcon[network] || 'substrate';\n  // filtering\n  n.isTestnet = !!knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);\n  n.isIgnored = n.isTestnet || !(o.standardAccount && o.decimals && o.decimals.length && o.symbols && o.symbols.length) && o.prefix !== 42;\n  return n;\n}\nfunction filterSelectable(_ref) {\n  let {\n    genesisHash,\n    prefix\n  } = _ref;\n  return !!genesisHash.length || prefix === 42;\n}\nfunction filterAvailable(n) {\n  return !n.isIgnored && !!n.network;\n}\nfunction sortNetworks(a, b) {\n  const isUnSortedA = UNSORTED.includes(a.prefix);\n  const isUnSortedB = UNSORTED.includes(b.prefix);\n  return isUnSortedA === isUnSortedB ? isUnSortedA ? 0 : a.displayName.localeCompare(b.displayName) : isUnSortedA ? -1 : 1;\n}\nexport const allNetworks = knownSubstrate.map(toExpanded);\nexport const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks);\nexport const selectableNetworks = availableNetworks.filter(filterSelectable);","map":{"version":3,"names":["knownSubstrate","knownGenesis","knownIcon","knownLedger","knownTestnet","UNSORTED","TESTNETS","toExpanded","o","network","nameParts","replace","split","n","slip44","hasLedgerSupport","genesisHash","icon","isTestnet","includes","length","isIgnored","standardAccount","decimals","symbols","prefix","filterSelectable","_ref","filterAvailable","sortNetworks","a","b","isUnSortedA","isUnSortedB","displayName","localeCompare","allNetworks","map","availableNetworks","filter","sort","selectableNetworks"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/networks/interfaces.js"],"sourcesContent":["import knownSubstrate from '@substrate/ss58-registry';\nimport { knownGenesis, knownIcon, knownLedger, knownTestnet } from './defaults/index.js';\nconst UNSORTED = [0, 2, 42];\nconst TESTNETS = ['testnet'];\nfunction toExpanded(o) {\n    const network = o.network || '';\n    const nameParts = network.replace(/_/g, '-').split('-');\n    const n = o;\n    // ledger additions\n    n.slip44 = knownLedger[network];\n    n.hasLedgerSupport = !!n.slip44;\n    // general items\n    n.genesisHash = knownGenesis[network] || [];\n    n.icon = knownIcon[network] || 'substrate';\n    // filtering\n    n.isTestnet = !!knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);\n    n.isIgnored = n.isTestnet || (!(o.standardAccount &&\n        o.decimals && o.decimals.length &&\n        o.symbols && o.symbols.length) &&\n        o.prefix !== 42);\n    return n;\n}\nfunction filterSelectable({ genesisHash, prefix }) {\n    return !!genesisHash.length || prefix === 42;\n}\nfunction filterAvailable(n) {\n    return !n.isIgnored && !!n.network;\n}\nfunction sortNetworks(a, b) {\n    const isUnSortedA = UNSORTED.includes(a.prefix);\n    const isUnSortedB = UNSORTED.includes(b.prefix);\n    return isUnSortedA === isUnSortedB\n        ? isUnSortedA\n            ? 0\n            : a.displayName.localeCompare(b.displayName)\n        : isUnSortedA\n            ? -1\n            : 1;\n}\nexport const allNetworks = knownSubstrate.map(toExpanded);\nexport const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks);\nexport const selectableNetworks = availableNetworks.filter(filterSelectable);\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,0BAA0B;AACrD,SAASC,YAAY,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,QAAQ,qBAAqB;AACxF,MAAMC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAC3B,MAAMC,QAAQ,GAAG,CAAC,SAAS,CAAC;AAC5B,SAASC,UAAUA,CAACC,CAAC,EAAE;EACnB,MAAMC,OAAO,GAAGD,CAAC,CAACC,OAAO,IAAI,EAAE;EAC/B,MAAMC,SAAS,GAAGD,OAAO,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EACvD,MAAMC,CAAC,GAAGL,CAAC;EACX;EACAK,CAAC,CAACC,MAAM,GAAGX,WAAW,CAACM,OAAO,CAAC;EAC/BI,CAAC,CAACE,gBAAgB,GAAG,CAAC,CAACF,CAAC,CAACC,MAAM;EAC/B;EACAD,CAAC,CAACG,WAAW,GAAGf,YAAY,CAACQ,OAAO,CAAC,IAAI,EAAE;EAC3CI,CAAC,CAACI,IAAI,GAAGf,SAAS,CAACO,OAAO,CAAC,IAAI,WAAW;EAC1C;EACAI,CAAC,CAACK,SAAS,GAAG,CAAC,CAACd,YAAY,CAACK,OAAO,CAAC,IAAIH,QAAQ,CAACa,QAAQ,CAACT,SAAS,CAACA,SAAS,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC;EAC3FP,CAAC,CAACQ,SAAS,GAAGR,CAAC,CAACK,SAAS,IAAK,EAAEV,CAAC,CAACc,eAAe,IAC7Cd,CAAC,CAACe,QAAQ,IAAIf,CAAC,CAACe,QAAQ,CAACH,MAAM,IAC/BZ,CAAC,CAACgB,OAAO,IAAIhB,CAAC,CAACgB,OAAO,CAACJ,MAAM,CAAC,IAC9BZ,CAAC,CAACiB,MAAM,KAAK,EAAG;EACpB,OAAOZ,CAAC;AACZ;AACA,SAASa,gBAAgBA,CAAAC,IAAA,EAA0B;EAAA,IAAzB;IAAEX,WAAW;IAAES;EAAO,CAAC,GAAAE,IAAA;EAC7C,OAAO,CAAC,CAACX,WAAW,CAACI,MAAM,IAAIK,MAAM,KAAK,EAAE;AAChD;AACA,SAASG,eAAeA,CAACf,CAAC,EAAE;EACxB,OAAO,CAACA,CAAC,CAACQ,SAAS,IAAI,CAAC,CAACR,CAAC,CAACJ,OAAO;AACtC;AACA,SAASoB,YAAYA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACxB,MAAMC,WAAW,GAAG3B,QAAQ,CAACc,QAAQ,CAACW,CAAC,CAACL,MAAM,CAAC;EAC/C,MAAMQ,WAAW,GAAG5B,QAAQ,CAACc,QAAQ,CAACY,CAAC,CAACN,MAAM,CAAC;EAC/C,OAAOO,WAAW,KAAKC,WAAW,GAC5BD,WAAW,GACP,CAAC,GACDF,CAAC,CAACI,WAAW,CAACC,aAAa,CAACJ,CAAC,CAACG,WAAW,CAAC,GAC9CF,WAAW,GACP,CAAC,CAAC,GACF,CAAC;AACf;AACA,OAAO,MAAMI,WAAW,GAAGpC,cAAc,CAACqC,GAAG,CAAC9B,UAAU,CAAC;AACzD,OAAO,MAAM+B,iBAAiB,GAAGF,WAAW,CAACG,MAAM,CAACX,eAAe,CAAC,CAACY,IAAI,CAACX,YAAY,CAAC;AACvF,OAAO,MAAMY,kBAAkB,GAAGH,iBAAiB,CAACC,MAAM,CAACb,gBAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}