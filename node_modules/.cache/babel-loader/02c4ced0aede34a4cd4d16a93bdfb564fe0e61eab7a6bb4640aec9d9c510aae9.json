{"ast":null,"code":"/**\n * @name stringShorten\n * @summary Returns a string with maximum length\n * @description\n * Checks the string against the `prefixLength`, if longer than double this, shortens it by placing `..` in the middle of it\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringShorten } from '@polkadot/util';\n *\n * stringShorten('1234567890', 2); // => 12..90\n * ```\n */\nexport function stringShorten(value) {\n  let prefixLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  return value.length <= 2 + 2 * prefixLength ? value.toString() : `${value.substring(0, prefixLength)}…${value.slice(-prefixLength)}`;\n}","map":{"version":3,"names":["stringShorten","value","prefixLength","arguments","length","undefined","toString","substring","slice"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/util/string/shorten.js"],"sourcesContent":["/**\n * @name stringShorten\n * @summary Returns a string with maximum length\n * @description\n * Checks the string against the `prefixLength`, if longer than double this, shortens it by placing `..` in the middle of it\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringShorten } from '@polkadot/util';\n *\n * stringShorten('1234567890', 2); // => 12..90\n * ```\n */\nexport function stringShorten(value, prefixLength = 6) {\n    return value.length <= 2 + 2 * prefixLength\n        ? value.toString()\n        : `${value.substring(0, prefixLength)}…${value.slice(-prefixLength)}`;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAaA,CAACC,KAAK,EAAoB;EAAA,IAAlBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACjD,OAAOF,KAAK,CAACG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAGF,YAAY,GACrCD,KAAK,CAACK,QAAQ,EAAE,GACf,GAAEL,KAAK,CAACM,SAAS,CAAC,CAAC,EAAEL,YAAY,CAAE,IAAGD,KAAK,CAACO,KAAK,CAAC,CAACN,YAAY,CAAE,EAAC;AAC7E"},"metadata":{},"sourceType":"module","externalDependencies":[]}