{"ast":null,"code":"import { nobody } from './pair/nobody.js';\nimport { createTestKeyring } from './testing.js';\nexport function createTestPairs(options) {\n  let isDerived = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const keyring = createTestKeyring(options, isDerived);\n  const pairs = keyring.getPairs();\n  const map = {\n    nobody: nobody()\n  };\n  for (const p of pairs) {\n    map[p.meta.name] = p;\n  }\n  return map;\n}","map":{"version":3,"names":["nobody","createTestKeyring","createTestPairs","options","isDerived","arguments","length","undefined","keyring","pairs","getPairs","map","p","meta","name"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/keyring/testingPairs.js"],"sourcesContent":["import { nobody } from './pair/nobody.js';\nimport { createTestKeyring } from './testing.js';\nexport function createTestPairs(options, isDerived = true) {\n    const keyring = createTestKeyring(options, isDerived);\n    const pairs = keyring.getPairs();\n    const map = { nobody: nobody() };\n    for (const p of pairs) {\n        map[p.meta.name] = p;\n    }\n    return map;\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAASC,iBAAiB,QAAQ,cAAc;AAChD,OAAO,SAASC,eAAeA,CAACC,OAAO,EAAoB;EAAA,IAAlBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACrD,MAAMG,OAAO,GAAGP,iBAAiB,CAACE,OAAO,EAAEC,SAAS,CAAC;EACrD,MAAMK,KAAK,GAAGD,OAAO,CAACE,QAAQ,EAAE;EAChC,MAAMC,GAAG,GAAG;IAAEX,MAAM,EAAEA,MAAM;EAAG,CAAC;EAChC,KAAK,MAAMY,CAAC,IAAIH,KAAK,EAAE;IACnBE,GAAG,CAACC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,GAAGF,CAAC;EACxB;EACA,OAAOD,GAAG;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}