{"ast":null,"code":"import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function u8aConcat() {\n  const u8as = new Array(arguments.length);\n  let length = 0;\n  for (let i = 0; i < arguments.length; i++) {\n    u8as[i] = u8aToU8a(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    length += u8as[i].length;\n  }\n  return u8aConcatStrict(u8as, length);\n}\n/**\n * @name u8aConcatStrict\n * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs\n */\nexport function u8aConcatStrict(u8as) {\n  let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let offset = 0;\n  if (!length) {\n    for (let i = 0; i < u8as.length; i++) {\n      length += u8as[i].length;\n    }\n  }\n  const result = new Uint8Array(length);\n  for (let i = 0; i < u8as.length; i++) {\n    result.set(u8as[i], offset);\n    offset += u8as[i].length;\n  }\n  return result;\n}","map":{"version":3,"names":["u8aToU8a","u8aConcat","u8as","Array","arguments","length","i","undefined","u8aConcatStrict","offset","result","Uint8Array","set"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/util/u8a/concat.js"],"sourcesContent":["import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function u8aConcat(...list) {\n    const u8as = new Array(list.length);\n    let length = 0;\n    for (let i = 0; i < list.length; i++) {\n        u8as[i] = u8aToU8a(list[i]);\n        length += u8as[i].length;\n    }\n    return u8aConcatStrict(u8as, length);\n}\n/**\n * @name u8aConcatStrict\n * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs\n */\nexport function u8aConcatStrict(u8as, length = 0) {\n    let offset = 0;\n    if (!length) {\n        for (let i = 0; i < u8as.length; i++) {\n            length += u8as[i].length;\n        }\n    }\n    const result = new Uint8Array(length);\n    for (let i = 0; i < u8as.length; i++) {\n        result.set(u8as[i], offset);\n        offset += u8as[i].length;\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAAA,EAAU;EAC/B,MAAMC,IAAI,GAAG,IAAIC,KAAK,CAACC,SAAA,CAAKC,MAAM,CAAC;EACnC,IAAIA,MAAM,GAAG,CAAC;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAA,CAAKC,MAAM,EAAEC,CAAC,EAAE,EAAE;IAClCJ,IAAI,CAACI,CAAC,CAAC,GAAGN,QAAQ,CAAMM,CAAC,QAAAF,SAAA,CAAAC,MAAA,IAADC,CAAC,GAAAC,SAAA,GAAAH,SAAA,CAADE,CAAC,EAAE;IAC3BD,MAAM,IAAIH,IAAI,CAACI,CAAC,CAAC,CAACD,MAAM;EAC5B;EACA,OAAOG,eAAe,CAACN,IAAI,EAAEG,MAAM,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,eAAeA,CAACN,IAAI,EAAc;EAAA,IAAZG,MAAM,GAAAD,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAG,SAAA,GAAAH,SAAA,MAAG,CAAC;EAC5C,IAAIK,MAAM,GAAG,CAAC;EACd,IAAI,CAACJ,MAAM,EAAE;IACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACG,MAAM,EAAEC,CAAC,EAAE,EAAE;MAClCD,MAAM,IAAIH,IAAI,CAACI,CAAC,CAAC,CAACD,MAAM;IAC5B;EACJ;EACA,MAAMK,MAAM,GAAG,IAAIC,UAAU,CAACN,MAAM,CAAC;EACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACG,MAAM,EAAEC,CAAC,EAAE,EAAE;IAClCI,MAAM,CAACE,GAAG,CAACV,IAAI,CAACI,CAAC,CAAC,EAAEG,MAAM,CAAC;IAC3BA,MAAM,IAAIP,IAAI,CAACI,CAAC,CAAC,CAACD,MAAM;EAC5B;EACA,OAAOK,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}