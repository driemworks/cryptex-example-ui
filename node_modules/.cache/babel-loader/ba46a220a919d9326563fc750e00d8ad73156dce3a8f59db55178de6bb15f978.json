{"ast":null,"code":"var _Combinator_allHasFired, _Combinator_callback, _Combinator_fired, _Combinator_fns, _Combinator_isActive, _Combinator_results, _Combinator_subscriptions;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { isFunction } from '@polkadot/util';\nexport class Combinator {\n  constructor(fns, callback) {\n    _Combinator_allHasFired.set(this, false);\n    _Combinator_callback.set(this, void 0);\n    _Combinator_fired.set(this, []);\n    _Combinator_fns.set(this, []);\n    _Combinator_isActive.set(this, true);\n    _Combinator_results.set(this, []);\n    _Combinator_subscriptions.set(this, []);\n    __classPrivateFieldSet(this, _Combinator_callback, callback, \"f\");\n    // eslint-disable-next-line @typescript-eslint/require-await\n    __classPrivateFieldSet(this, _Combinator_subscriptions, fns.map(async (input, index) => {\n      const [fn, ...args] = Array.isArray(input) ? input : [input];\n      __classPrivateFieldGet(this, _Combinator_fired, \"f\").push(false);\n      __classPrivateFieldGet(this, _Combinator_fns, \"f\").push(fn);\n      // Not quite 100% how to have a variable number at the front here\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/ban-types\n      return fn(...args, this._createCallback(index));\n    }), \"f\");\n  }\n  _allHasFired() {\n    __classPrivateFieldSet(this, _Combinator_allHasFired, __classPrivateFieldGet(this, _Combinator_allHasFired, \"f\") || __classPrivateFieldGet(this, _Combinator_fired, \"f\").filter(hasFired => !hasFired).length === 0, \"f\");\n    return __classPrivateFieldGet(this, _Combinator_allHasFired, \"f\");\n  }\n  _createCallback(index) {\n    return value => {\n      __classPrivateFieldGet(this, _Combinator_fired, \"f\")[index] = true;\n      __classPrivateFieldGet(this, _Combinator_results, \"f\")[index] = value;\n      this._triggerUpdate();\n    };\n  }\n  _triggerUpdate() {\n    if (!__classPrivateFieldGet(this, _Combinator_isActive, \"f\") || !isFunction(__classPrivateFieldGet(this, _Combinator_callback, \"f\")) || !this._allHasFired()) {\n      return;\n    }\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      __classPrivateFieldGet(this, _Combinator_callback, \"f\").call(this, __classPrivateFieldGet(this, _Combinator_results, \"f\"));\n    } catch {\n      // swallow, we don't want the handler to trip us up\n    }\n  }\n  unsubscribe() {\n    if (!__classPrivateFieldGet(this, _Combinator_isActive, \"f\")) {\n      return;\n    }\n    __classPrivateFieldSet(this, _Combinator_isActive, false, \"f\");\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    __classPrivateFieldGet(this, _Combinator_subscriptions, \"f\").forEach(async subscription => {\n      try {\n        const unsubscribe = await subscription;\n        if (isFunction(unsubscribe)) {\n          unsubscribe();\n        }\n      } catch {\n        // ignore\n      }\n    });\n  }\n}\n_Combinator_allHasFired = new WeakMap(), _Combinator_callback = new WeakMap(), _Combinator_fired = new WeakMap(), _Combinator_fns = new WeakMap(), _Combinator_isActive = new WeakMap(), _Combinator_results = new WeakMap(), _Combinator_subscriptions = new WeakMap();","map":{"version":3,"names":["_Combinator_allHasFired","_Combinator_callback","_Combinator_fired","_Combinator_fns","_Combinator_isActive","_Combinator_results","_Combinator_subscriptions","__classPrivateFieldGet","__classPrivateFieldSet","isFunction","Combinator","constructor","fns","callback","set","map","input","index","fn","args","Array","isArray","push","_createCallback","_allHasFired","filter","hasFired","length","value","_triggerUpdate","call","unsubscribe","forEach","subscription","WeakMap"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/api/promise/Combinator.js"],"sourcesContent":["var _Combinator_allHasFired, _Combinator_callback, _Combinator_fired, _Combinator_fns, _Combinator_isActive, _Combinator_results, _Combinator_subscriptions;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { isFunction } from '@polkadot/util';\nexport class Combinator {\n    constructor(fns, callback) {\n        _Combinator_allHasFired.set(this, false);\n        _Combinator_callback.set(this, void 0);\n        _Combinator_fired.set(this, []);\n        _Combinator_fns.set(this, []);\n        _Combinator_isActive.set(this, true);\n        _Combinator_results.set(this, []);\n        _Combinator_subscriptions.set(this, []);\n        __classPrivateFieldSet(this, _Combinator_callback, callback, \"f\");\n        // eslint-disable-next-line @typescript-eslint/require-await\n        __classPrivateFieldSet(this, _Combinator_subscriptions, fns.map(async (input, index) => {\n            const [fn, ...args] = Array.isArray(input)\n                ? input\n                : [input];\n            __classPrivateFieldGet(this, _Combinator_fired, \"f\").push(false);\n            __classPrivateFieldGet(this, _Combinator_fns, \"f\").push(fn);\n            // Not quite 100% how to have a variable number at the front here\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/ban-types\n            return fn(...args, this._createCallback(index));\n        }), \"f\");\n    }\n    _allHasFired() {\n        __classPrivateFieldSet(this, _Combinator_allHasFired, __classPrivateFieldGet(this, _Combinator_allHasFired, \"f\") || __classPrivateFieldGet(this, _Combinator_fired, \"f\").filter((hasFired) => !hasFired).length === 0, \"f\");\n        return __classPrivateFieldGet(this, _Combinator_allHasFired, \"f\");\n    }\n    _createCallback(index) {\n        return (value) => {\n            __classPrivateFieldGet(this, _Combinator_fired, \"f\")[index] = true;\n            __classPrivateFieldGet(this, _Combinator_results, \"f\")[index] = value;\n            this._triggerUpdate();\n        };\n    }\n    _triggerUpdate() {\n        if (!__classPrivateFieldGet(this, _Combinator_isActive, \"f\") || !isFunction(__classPrivateFieldGet(this, _Combinator_callback, \"f\")) || !this._allHasFired()) {\n            return;\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            __classPrivateFieldGet(this, _Combinator_callback, \"f\").call(this, __classPrivateFieldGet(this, _Combinator_results, \"f\"));\n        }\n        catch {\n            // swallow, we don't want the handler to trip us up\n        }\n    }\n    unsubscribe() {\n        if (!__classPrivateFieldGet(this, _Combinator_isActive, \"f\")) {\n            return;\n        }\n        __classPrivateFieldSet(this, _Combinator_isActive, false, \"f\");\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        __classPrivateFieldGet(this, _Combinator_subscriptions, \"f\").forEach(async (subscription) => {\n            try {\n                const unsubscribe = await subscription;\n                if (isFunction(unsubscribe)) {\n                    unsubscribe();\n                }\n            }\n            catch {\n                // ignore\n            }\n        });\n    }\n}\n_Combinator_allHasFired = new WeakMap(), _Combinator_callback = new WeakMap(), _Combinator_fired = new WeakMap(), _Combinator_fns = new WeakMap(), _Combinator_isActive = new WeakMap(), _Combinator_results = new WeakMap(), _Combinator_subscriptions = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}