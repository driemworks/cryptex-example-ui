{"ast":null,"code":"var _WrapperKeepOpaque_Type, _WrapperKeepOpaque_decoded, _WrapperKeepOpaque_opaqueName;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { compactAddLength, compactStripLength, compactToU8a, isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\nimport { typeToConstructor } from '../utils/index.js';\nimport { Bytes } from './Bytes.js';\nfunction decodeRaw(registry, typeName, value) {\n  const Type = typeToConstructor(registry, typeName);\n  if (isU8a(value) || isHex(value)) {\n    try {\n      const [, u8a] = isHex(value) ? [0, u8aToU8a(value)] : value instanceof Raw ? [0, value.subarray()] : compactStripLength(value);\n      return [Type, new Type(registry, u8a), value];\n    } catch {\n      return [Type, null, value];\n    }\n  }\n  const instance = new Type(registry, value);\n  return [Type, instance, compactAddLength(instance.toU8a())];\n}\nexport class WrapperKeepOpaque extends Bytes {\n  constructor(registry, typeName, value) {\n    let {\n      opaqueName = 'WrapperKeepOpaque'\n    } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const [Type, decoded, u8a] = decodeRaw(registry, typeName, value);\n    super(registry, u8a);\n    _WrapperKeepOpaque_Type.set(this, void 0);\n    _WrapperKeepOpaque_decoded.set(this, void 0);\n    _WrapperKeepOpaque_opaqueName.set(this, void 0);\n    __classPrivateFieldSet(this, _WrapperKeepOpaque_Type, Type, \"f\");\n    __classPrivateFieldSet(this, _WrapperKeepOpaque_decoded, decoded, \"f\");\n    __classPrivateFieldSet(this, _WrapperKeepOpaque_opaqueName, opaqueName, \"f\");\n  }\n  static with(Type) {\n    return class extends WrapperKeepOpaque {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n    };\n  }\n  /**\n   * @description Checks if the wrapper is decodable\n   */\n  get isDecoded() {\n    return !!__classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\");\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n  inspect() {\n    return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\") ? {\n      inner: [__classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").inspect()],\n      outer: [compactToU8a(this.length)]\n    } : {\n      outer: [compactToU8a(this.length), this.toU8a(true)]\n    };\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n  toHuman(isExtended) {\n    return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\") ? __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").toHuman(isExtended) : super.toHuman();\n  }\n  /**\n   * @description Converts the value in a best-fit primitive form\n   */\n  toPrimitive() {\n    return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\") ? __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").toPrimitive() : super.toPrimitive();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n  toRawType() {\n    return `${__classPrivateFieldGet(this, _WrapperKeepOpaque_opaqueName, \"f\")}<${this.registry.getClassName(__classPrivateFieldGet(this, _WrapperKeepOpaque_Type, \"f\")) || (__classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\") ? __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").toRawType() : new (__classPrivateFieldGet(this, _WrapperKeepOpaque_Type, \"f\"))(this.registry).toRawType())}>`;\n  }\n  /**\n   * @description Converts the Object to to a string (either decoded or bytes)\n   */\n  toString() {\n    return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\") ? __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").toString() : super.toString();\n  }\n  /**\n   * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable\n   */\n  unwrap() {\n    if (!__classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\")) {\n      throw new Error(`${__classPrivateFieldGet(this, _WrapperKeepOpaque_opaqueName, \"f\")}: unwrapping an undecodable value`);\n    }\n    return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\");\n  }\n}\n_WrapperKeepOpaque_Type = new WeakMap(), _WrapperKeepOpaque_decoded = new WeakMap(), _WrapperKeepOpaque_opaqueName = new WeakMap();","map":{"version":3,"names":["_WrapperKeepOpaque_Type","_WrapperKeepOpaque_decoded","_WrapperKeepOpaque_opaqueName","__classPrivateFieldGet","__classPrivateFieldSet","compactAddLength","compactStripLength","compactToU8a","isHex","isU8a","u8aToU8a","Raw","typeToConstructor","Bytes","decodeRaw","registry","typeName","value","Type","u8a","subarray","instance","toU8a","WrapperKeepOpaque","constructor","opaqueName","arguments","length","undefined","decoded","set","with","isDecoded","inspect","inner","outer","toHuman","isExtended","toPrimitive","toRawType","getClassName","toString","unwrap","Error","WeakMap"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js"],"sourcesContent":["var _WrapperKeepOpaque_Type, _WrapperKeepOpaque_decoded, _WrapperKeepOpaque_opaqueName;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { compactAddLength, compactStripLength, compactToU8a, isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\nimport { typeToConstructor } from '../utils/index.js';\nimport { Bytes } from './Bytes.js';\nfunction decodeRaw(registry, typeName, value) {\n    const Type = typeToConstructor(registry, typeName);\n    if (isU8a(value) || isHex(value)) {\n        try {\n            const [, u8a] = isHex(value)\n                ? [0, u8aToU8a(value)]\n                : (value instanceof Raw)\n                    ? [0, value.subarray()]\n                    : compactStripLength(value);\n            return [Type, new Type(registry, u8a), value];\n        }\n        catch {\n            return [Type, null, value];\n        }\n    }\n    const instance = new Type(registry, value);\n    return [Type, instance, compactAddLength(instance.toU8a())];\n}\nexport class WrapperKeepOpaque extends Bytes {\n    constructor(registry, typeName, value, { opaqueName = 'WrapperKeepOpaque' } = {}) {\n        const [Type, decoded, u8a] = decodeRaw(registry, typeName, value);\n        super(registry, u8a);\n        _WrapperKeepOpaque_Type.set(this, void 0);\n        _WrapperKeepOpaque_decoded.set(this, void 0);\n        _WrapperKeepOpaque_opaqueName.set(this, void 0);\n        __classPrivateFieldSet(this, _WrapperKeepOpaque_Type, Type, \"f\");\n        __classPrivateFieldSet(this, _WrapperKeepOpaque_decoded, decoded, \"f\");\n        __classPrivateFieldSet(this, _WrapperKeepOpaque_opaqueName, opaqueName, \"f\");\n    }\n    static with(Type) {\n        return class extends WrapperKeepOpaque {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n    /**\n     * @description Checks if the wrapper is decodable\n     */\n    get isDecoded() {\n        return !!__classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\");\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\")\n            ? {\n                inner: [__classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").inspect()],\n                outer: [compactToU8a(this.length)]\n            }\n            : {\n                outer: [compactToU8a(this.length), this.toU8a(true)]\n            };\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended) {\n        return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\")\n            ? __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").toHuman(isExtended)\n            : super.toHuman();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\")\n            ? __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").toPrimitive()\n            : super.toPrimitive();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `${__classPrivateFieldGet(this, _WrapperKeepOpaque_opaqueName, \"f\")}<${this.registry.getClassName(__classPrivateFieldGet(this, _WrapperKeepOpaque_Type, \"f\")) || (__classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\") ? __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").toRawType() : new (__classPrivateFieldGet(this, _WrapperKeepOpaque_Type, \"f\"))(this.registry).toRawType())}>`;\n    }\n    /**\n     * @description Converts the Object to to a string (either decoded or bytes)\n     */\n    toString() {\n        return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\")\n            ? __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\").toString()\n            : super.toString();\n    }\n    /**\n     * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable\n     */\n    unwrap() {\n        if (!__classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\")) {\n            throw new Error(`${__classPrivateFieldGet(this, _WrapperKeepOpaque_opaqueName, \"f\")}: unwrapping an undecodable value`);\n        }\n        return __classPrivateFieldGet(this, _WrapperKeepOpaque_decoded, \"f\");\n    }\n}\n_WrapperKeepOpaque_Type = new WeakMap(), _WrapperKeepOpaque_decoded = new WeakMap(), _WrapperKeepOpaque_opaqueName = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}