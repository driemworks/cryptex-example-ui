{"ast":null,"code":"/** @internal */\nexport function approvalFlagsToBools(flags) {\n  const bools = [];\n  for (let i = 0; i < flags.length; i++) {\n    const str = flags[i].toString(2);\n    // read from lowest bit to highest\n    for (const bit of str.split('').reverse()) {\n      bools.push(!!parseInt(bit, 10));\n    }\n  }\n  // slice off trailing \"false\" values, as in substrate\n  const lastApproval = bools.lastIndexOf(true);\n  return lastApproval >= 0 ? bools.slice(0, lastApproval + 1) : [];\n}","map":{"version":3,"names":["approvalFlagsToBools","flags","bools","i","length","str","toString","bit","split","reverse","push","parseInt","lastApproval","lastIndexOf","slice"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/api-derive/util/approvalFlagsToBools.js"],"sourcesContent":["/** @internal */\nexport function approvalFlagsToBools(flags) {\n    const bools = [];\n    for (let i = 0; i < flags.length; i++) {\n        const str = flags[i].toString(2);\n        // read from lowest bit to highest\n        for (const bit of str.split('').reverse()) {\n            bools.push(!!parseInt(bit, 10));\n        }\n    }\n    // slice off trailing \"false\" values, as in substrate\n    const lastApproval = bools.lastIndexOf(true);\n    return lastApproval >= 0\n        ? bools.slice(0, lastApproval + 1)\n        : [];\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,oBAAoBA,CAACC,KAAK,EAAE;EACxC,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACnC,MAAME,GAAG,GAAGJ,KAAK,CAACE,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAC;IAChC;IACA,KAAK,MAAMC,GAAG,IAAIF,GAAG,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,EAAE,EAAE;MACvCP,KAAK,CAACQ,IAAI,CAAC,CAAC,CAACC,QAAQ,CAACJ,GAAG,EAAE,EAAE,CAAC,CAAC;IACnC;EACJ;EACA;EACA,MAAMK,YAAY,GAAGV,KAAK,CAACW,WAAW,CAAC,IAAI,CAAC;EAC5C,OAAOD,YAAY,IAAI,CAAC,GAClBV,KAAK,CAACY,KAAK,CAAC,CAAC,EAAEF,YAAY,GAAG,CAAC,CAAC,GAChC,EAAE;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}