{"ast":null,"code":"import { objectSpread } from '@polkadot/util';\nconst CORE_V1_TO_V4 = {\n  execute_block: {\n    description: 'Execute the given block.',\n    params: [{\n      name: 'block',\n      type: 'Block'\n    }],\n    type: 'Null'\n  }\n};\nconst CORE_V1_TO_V2 = {\n  version: {\n    description: 'Returns the version of the runtime.',\n    params: [],\n    type: 'RuntimeVersionPre3'\n  }\n};\nconst CORE_V2_TO_V4 = {\n  initialize_block: {\n    description: 'Initialize a block with the given header.',\n    params: [{\n      name: 'header',\n      type: 'Header'\n    }],\n    type: 'Null'\n  }\n};\nexport const runtime = {\n  Core: [{\n    methods: objectSpread({\n      version: {\n        description: 'Returns the version of the runtime.',\n        params: [],\n        type: 'RuntimeVersion'\n      }\n    }, CORE_V1_TO_V4, CORE_V2_TO_V4),\n    version: 4\n  }, {\n    methods: objectSpread({\n      version: {\n        description: 'Returns the version of the runtime.',\n        params: [],\n        type: 'RuntimeVersionPre4'\n      }\n    }, CORE_V1_TO_V4, CORE_V2_TO_V4),\n    version: 3\n  }, {\n    methods: objectSpread({}, CORE_V1_TO_V2, CORE_V1_TO_V4, CORE_V2_TO_V4),\n    version: 2\n  }, {\n    methods: objectSpread({\n      initialise_block: {\n        description: 'Initialize a block with the given header.',\n        params: [{\n          name: 'header',\n          type: 'Header'\n        }],\n        type: 'Null'\n      }\n    }, CORE_V1_TO_V2, CORE_V1_TO_V4),\n    version: 1\n  }]\n};","map":{"version":3,"names":["objectSpread","CORE_V1_TO_V4","execute_block","description","params","name","type","CORE_V1_TO_V2","version","CORE_V2_TO_V4","initialize_block","runtime","Core","methods","initialise_block"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/types/interfaces/runtime/runtime.js"],"sourcesContent":["import { objectSpread } from '@polkadot/util';\nconst CORE_V1_TO_V4 = {\n    execute_block: {\n        description: 'Execute the given block.',\n        params: [\n            {\n                name: 'block',\n                type: 'Block'\n            }\n        ],\n        type: 'Null'\n    }\n};\nconst CORE_V1_TO_V2 = {\n    version: {\n        description: 'Returns the version of the runtime.',\n        params: [],\n        type: 'RuntimeVersionPre3'\n    }\n};\nconst CORE_V2_TO_V4 = {\n    initialize_block: {\n        description: 'Initialize a block with the given header.',\n        params: [\n            {\n                name: 'header',\n                type: 'Header'\n            }\n        ],\n        type: 'Null'\n    }\n};\nexport const runtime = {\n    Core: [\n        {\n            methods: objectSpread({\n                version: {\n                    description: 'Returns the version of the runtime.',\n                    params: [],\n                    type: 'RuntimeVersion'\n                }\n            }, CORE_V1_TO_V4, CORE_V2_TO_V4),\n            version: 4\n        },\n        {\n            methods: objectSpread({\n                version: {\n                    description: 'Returns the version of the runtime.',\n                    params: [],\n                    type: 'RuntimeVersionPre4'\n                }\n            }, CORE_V1_TO_V4, CORE_V2_TO_V4),\n            version: 3\n        },\n        {\n            methods: objectSpread({}, CORE_V1_TO_V2, CORE_V1_TO_V4, CORE_V2_TO_V4),\n            version: 2\n        },\n        {\n            methods: objectSpread({\n                initialise_block: {\n                    description: 'Initialize a block with the given header.',\n                    params: [\n                        {\n                            name: 'header',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'Null'\n                }\n            }, CORE_V1_TO_V2, CORE_V1_TO_V4),\n            version: 1\n        }\n    ]\n};\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C,MAAMC,aAAa,GAAG;EAClBC,aAAa,EAAE;IACXC,WAAW,EAAE,0BAA0B;IACvCC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV;AACJ,CAAC;AACD,MAAMC,aAAa,GAAG;EAClBC,OAAO,EAAE;IACLL,WAAW,EAAE,qCAAqC;IAClDC,MAAM,EAAE,EAAE;IACVE,IAAI,EAAE;EACV;AACJ,CAAC;AACD,MAAMG,aAAa,GAAG;EAClBC,gBAAgB,EAAE;IACdP,WAAW,EAAE,2CAA2C;IACxDC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV;AACJ,CAAC;AACD,OAAO,MAAMK,OAAO,GAAG;EACnBC,IAAI,EAAE,CACF;IACIC,OAAO,EAAEb,YAAY,CAAC;MAClBQ,OAAO,EAAE;QACLL,WAAW,EAAE,qCAAqC;QAClDC,MAAM,EAAE,EAAE;QACVE,IAAI,EAAE;MACV;IACJ,CAAC,EAAEL,aAAa,EAAEQ,aAAa,CAAC;IAChCD,OAAO,EAAE;EACb,CAAC,EACD;IACIK,OAAO,EAAEb,YAAY,CAAC;MAClBQ,OAAO,EAAE;QACLL,WAAW,EAAE,qCAAqC;QAClDC,MAAM,EAAE,EAAE;QACVE,IAAI,EAAE;MACV;IACJ,CAAC,EAAEL,aAAa,EAAEQ,aAAa,CAAC;IAChCD,OAAO,EAAE;EACb,CAAC,EACD;IACIK,OAAO,EAAEb,YAAY,CAAC,CAAC,CAAC,EAAEO,aAAa,EAAEN,aAAa,EAAEQ,aAAa,CAAC;IACtED,OAAO,EAAE;EACb,CAAC,EACD;IACIK,OAAO,EAAEb,YAAY,CAAC;MAClBc,gBAAgB,EAAE;QACdX,WAAW,EAAE,2CAA2C;QACxDC,MAAM,EAAE,CACJ;UACIC,IAAI,EAAE,QAAQ;UACdC,IAAI,EAAE;QACV,CAAC,CACJ;QACDA,IAAI,EAAE;MACV;IACJ,CAAC,EAAEC,aAAa,EAAEN,aAAa,CAAC;IAChCO,OAAO,EAAE;EACb,CAAC;AAET,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}