{"ast":null,"code":"/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\nexport function objectSpread(dest) {\n  for (let i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {\n    const src = i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];\n    if (src) {\n      if (typeof src.entries === 'function') {\n        for (const [key, value] of src.entries()) {\n          dest[key] = value;\n        }\n      } else {\n        Object.assign(dest, src);\n      }\n    }\n  }\n  return dest;\n}","map":{"version":3,"names":["objectSpread","dest","i","arguments","length","src","undefined","entries","key","value","Object","assign"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/util/object/spread.js"],"sourcesContent":["/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\nexport function objectSpread(dest, ...sources) {\n    for (let i = 0; i < sources.length; i++) {\n        const src = sources[i];\n        if (src) {\n            if (typeof src.entries === 'function') {\n                for (const [key, value] of src.entries()) {\n                    dest[key] = value;\n                }\n            }\n            else {\n                Object.assign(dest, src);\n            }\n        }\n    }\n    return dest;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAYA,CAACC,IAAI,EAAc;EAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAAC,SAAA,CAAAC,MAAA,YAAAD,SAAA,CAAAC,MAAA,KAAiB,EAAEF,CAAC,EAAE,EAAE;IACrC,MAAMG,GAAG,GAAWH,CAAC,YAAAC,SAAA,CAAAC,MAAA,IAADF,CAAC,OAAAI,SAAA,GAAAH,SAAA,CAADD,CAAC,KAAC;IACtB,IAAIG,GAAG,EAAE;MACL,IAAI,OAAOA,GAAG,CAACE,OAAO,KAAK,UAAU,EAAE;QACnC,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIJ,GAAG,CAACE,OAAO,EAAE,EAAE;UACtCN,IAAI,CAACO,GAAG,CAAC,GAAGC,KAAK;QACrB;MACJ,CAAC,MACI;QACDC,MAAM,CAACC,MAAM,CAACV,IAAI,EAAEI,GAAG,CAAC;MAC5B;IACJ;EACJ;EACA,OAAOJ,IAAI;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}