{"ast":null,"code":"var _jsxFileName = \"/home/driemworks/cryptex/ui/src/App.js\",\n  _s3 = $RefreshSig$();\n/* global BigInt */\nimport './App.css';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { w_keygen, w_calculate_secret, w_calculate_pubkey, w_combine_pubkeys, w_combine_secrets, w_encrypt, w_threshold_decrypt } from \"dkg-wasm\";\nimport { useWasm } from './useWasm';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // make sure the wasm blob is loaded\n  useWasm();\n  const [api, setApi] = useState(null);\n  const [acct, setAcct] = useState(null);\n  const [societyId, setSocietyId] = useState('');\n  const [invitations, setInvitiations] = useState([]);\n  const [activeMemberships, setActiveMemberships] = useState([]);\n  useEffect(() => {\n    const host = \"127.0.0.1\";\n    const port = \"9944\";\n    let provider = new WsProvider(`ws://${host}:${port}`);\n    const f = async () => {\n      const api = await ApiPromise.create({\n        provider,\n        types: {\n          SocietyId: \"Bytes\"\n        }\n      });\n      await api.isReady;\n      setApi(api);\n      // load ALICE account\n      const keyring = new Keyring({\n        type: 'sr25519'\n      });\n      let aliceAcct = keyring.addFromUri(\"//Alice\");\n      setAcct(aliceAcct);\n      // updateMembershipMaps(api, aliceAcct);\n    };\n\n    f();\n  }, []);\n  useEffect(() => {\n    console.log('hey');\n    updateMembershipMaps(api, acct);\n  }, [acct]);\n  const handleQuerySociety = async (api, id) => {\n    let society = await api.query.society.societies(id);\n    return society;\n  };\n  const updateMembershipMaps = (api, acct) => {\n    queryActiveMembership(api, acct);\n    queryInvites(api, acct);\n  };\n  const queryInvites = async (api, acct) => {\n    let my_invitations = await api.query.society.membership(acct.address, \"invitee\");\n    my_invitations.forEach(async invite => {\n      let society = await handleQuerySociety(api, invite);\n      setInvitiations([...invitations, {\n        id: invite,\n        society: society\n      }]);\n    });\n  };\n  const queryActiveMembership = async (api, acct) => {\n    let activeMembershipsResults = await api.query.society.membership(acct.address, \"active\");\n    activeMembershipsResults.forEach(async id => {\n      let societyDetails = await handleQuerySociety(api, id);\n      setActiveMemberships([...activeMemberships, {\n        id: id,\n        society: societyDetails\n      }]);\n    });\n  };\n  const Memberships = () => {\n    _s();\n    const [isLoading, setIsLoading] = useState(false);\n    const [displayText, setDisplayText] = useState(['']);\n    const handleKeygen = (id, threshold, r) => {\n      setIsLoading(true);\n      setDisplayText([...displayText, 'Generating secrets']);\n      // each participant must agree on two numbers\n      let r1 = 45432;\n      let r2 = 48484;\n      let poly = w_keygen(BigInt(r), threshold);\n      let secret = w_calculate_secret(poly.coeffs);\n      let pubkey = w_calculate_pubkey(BigInt(r1), BigInt(r2), secret);\n      setDisplayText([...displayText, 'Calculated public key']);\n      setDisplayText([...displayText, 'Submitting signed tx']);\n      api.tx.society.joinSociety(id, pubkey.g2).signAndSend(acct, result => {\n        if (result.isFinalized) {\n          console.log('the tx is finalized');\n          setDisplayText([...displayText, 'Tx finalized']);\n          // updateMembershipMaps(api, acct);\n          setDisplayText('');\n          setIsLoading(false);\n        }\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"membership-container\",\n      children: [isLoading === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: displayText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Invites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: invitations.map((item, idx) => {\n            let threshold = JSON.parse(JSON.stringify(item.society)).threshold;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Society Id \", item.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Founded By \", JSON.parse(JSON.stringify(item.society)).founder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Threshold \", threshold]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleKeygen(item.id, threshold, 23),\n                  children: \"Generate keys (join)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Your Societies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: activeMemberships.map((s, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: JSON.stringify(s)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Memberships, \"c9O6f4TzRBxoGQjsjbRpsgsQ888=\");\n  const CreateSociety = () => {\n    _s2();\n    const [threshold, setThreshold] = useState(0);\n    const [deadline, setDeadline] = useState(0);\n    const [name, setName] = useState('');\n    const [id, setId] = useState('');\n    // TODO: for now, Alice is the only member\n    const [members, setMembers] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const handleCreateSociety = () => {\n      setIsLoading(true);\n      api.tx.society.createSociety(id, threshold, name, deadline, [acct.address]).signAndSend(acct, result => {\n        if (result.isInBlock) {\n          console.log('the tx was successful');\n        }\n        if (result.isFinalized) {\n          console.log('the tx is finalized');\n          // will emit an event in the future\n          setIsLoading(false);\n          // updateMembershipMaps(api, acct);\n        }\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Create a Society\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), isLoading === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"threshold\",\n          children: \"threshold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"threshold\",\n          type: \"number\",\n          value: threshold,\n          onChange: e => setThreshold(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"id\",\n          type: \"text\",\n          value: id,\n          onChange: e => setId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deadline\",\n          children: \"deadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"deadline\",\n          type: \"number\",\n          value: deadline,\n          onChange: e => setDeadline(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateSociety,\n          children: \" Create Society\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  };\n\n  // const calculateGroupPublicKey = () => {\n  //   return society.reduce((a, b) => w_combine_pubkeys(a.pubkey, b.pubkey));\n  // }\n\n  // const calculateGroupSecretKey = () => {\n  //   return society.reduce((a, b) => w_combine_secrets(a.secret, b.secret));\n  // }\n  _s2(CreateSociety, \"5tR40lZ+f7X99FprSO3aX2SzpP4=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cryptex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Api is \", api === null ? 'not' : '', \" ready\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: /*#__PURE__*/_jsxDEV(Memberships, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: /*#__PURE__*/_jsxDEV(CreateSociety, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"w32kNUr/Uxy3VpqcZSVRQHicfos=\", false, function () {\n  return [useWasm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ApiPromise","WsProvider","Keyring","w_keygen","w_calculate_secret","w_calculate_pubkey","w_combine_pubkeys","w_combine_secrets","w_encrypt","w_threshold_decrypt","useWasm","useEffect","useState","jsxDEV","_jsxDEV","App","_s3","_s","$RefreshSig$","_s2","api","setApi","acct","setAcct","societyId","setSocietyId","invitations","setInvitiations","activeMemberships","setActiveMemberships","host","port","provider","f","create","types","SocietyId","isReady","keyring","type","aliceAcct","addFromUri","console","log","updateMembershipMaps","handleQuerySociety","id","society","query","societies","queryActiveMembership","queryInvites","my_invitations","membership","address","forEach","invite","activeMembershipsResults","societyDetails","Memberships","isLoading","setIsLoading","displayText","setDisplayText","handleKeygen","threshold","r","r1","r2","poly","BigInt","secret","coeffs","pubkey","tx","joinSociety","g2","signAndSend","result","isFinalized","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","idx","JSON","parse","stringify","founder","onClick","s","CreateSociety","setThreshold","deadline","setDeadline","name","setName","setId","members","setMembers","handleCreateSociety","createSociety","isInBlock","htmlFor","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/driemworks/cryptex/ui/src/App.js"],"sourcesContent":["/* global BigInt */\r\nimport './App.css';\r\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\r\nimport { \r\n    w_keygen, w_calculate_secret, \r\n    w_calculate_pubkey, w_combine_pubkeys,\r\n    w_combine_secrets, w_encrypt, w_threshold_decrypt\r\n} from \"dkg-wasm\";\r\nimport { useWasm } from './useWasm';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n  // make sure the wasm blob is loaded\r\n  useWasm();\r\n\r\n  const [api, setApi] = useState(null);\r\n  const [acct, setAcct] = useState(null);\r\n  const [societyId, setSocietyId] = useState('');\r\n  const [invitations, setInvitiations] = useState([]);\r\n  const [activeMemberships, setActiveMemberships] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const host = \"127.0.0.1\";\r\n    const port = \"9944\";\r\n    let provider = new WsProvider(`ws://${host}:${port}`);\r\n    const f = async () => {\r\n      const api = await ApiPromise.create({\r\n        provider,\r\n        types: {\r\n          SocietyId: \"Bytes\",\r\n        }\r\n      });\r\n      await api.isReady;\r\n      setApi(api);\r\n      // load ALICE account\r\n      const keyring = new Keyring({ type: 'sr25519' });\r\n      let aliceAcct = keyring.addFromUri(\"//Alice\");\r\n      setAcct(aliceAcct);\r\n      // updateMembershipMaps(api, aliceAcct);\r\n    }\r\n    f();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('hey');\r\n    updateMembershipMaps(api, acct);\r\n  }, [acct]);\r\n\r\n  const handleQuerySociety = async(api, id) => {\r\n    let society = await api.query.society.societies(id);\r\n    return society;\r\n  }\r\n\r\n  const updateMembershipMaps = (api, acct) => {\r\n    queryActiveMembership(api, acct);\r\n    queryInvites(api, acct);\r\n  }\r\n\r\n  const queryInvites = async (api, acct) => {\r\n    let my_invitations = await api.query.society.membership(acct.address, \"invitee\");\r\n    my_invitations.forEach(async invite => {\r\n      let society = await handleQuerySociety(api, invite);\r\n      setInvitiations([...invitations, {\r\n        id: invite,\r\n        society: society,\r\n      }]);\r\n    });\r\n    \r\n  }\r\n\r\n  const queryActiveMembership = async (api, acct) => {\r\n\r\n    let activeMembershipsResults = await api.query.society.membership(acct.address, \"active\");\r\n    activeMembershipsResults.forEach(async id => {\r\n      let societyDetails = await handleQuerySociety(api, id);\r\n      setActiveMemberships([...activeMemberships, {\r\n        id: id,\r\n        society: societyDetails,\r\n      }]);\r\n    });\r\n  }\r\n\r\n  const Memberships = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [displayText, setDisplayText] = useState(['']);\r\n\r\n    const handleKeygen = (id, threshold, r) => {\r\n      setIsLoading(true);\r\n      setDisplayText([...displayText, 'Generating secrets']);\r\n      // each participant must agree on two numbers\r\n      let r1 = 45432;\r\n      let r2 = 48484;\r\n      let poly = w_keygen(BigInt(r), threshold);\r\n      let secret = w_calculate_secret(poly.coeffs);\r\n      let pubkey = w_calculate_pubkey(BigInt(r1), BigInt(r2), secret);\r\n      \r\n      setDisplayText([...displayText, 'Calculated public key']);\r\n      setDisplayText([...displayText, 'Submitting signed tx']);\r\n      api.tx.society.joinSociety(\r\n        id, pubkey.g2,\r\n      ).signAndSend(acct, result => {\r\n        if (result.isFinalized) {\r\n          console.log('the tx is finalized');\r\n          setDisplayText([...displayText, 'Tx finalized']);\r\n          // updateMembershipMaps(api, acct);\r\n          setDisplayText('');\r\n          setIsLoading(false);\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className='membership-container'>\r\n        { isLoading === true ? \r\n        <div>\r\n          {displayText}\r\n        </div> :\r\n        <div className='container'>\r\n          <span>Invites</span>\r\n          <ul>\r\n          { invitations.map((item, idx) => {\r\n            let threshold = JSON.parse(JSON.stringify(item.society)).threshold;\r\n            return (<li>\r\n              <div className='section'>\r\n                <span>\r\n                  Society Id { item.id }\r\n                </span>\r\n                <span>\r\n                  Founded By { JSON.parse(JSON.stringify(item.society)).founder }\r\n                  {/* { item.society.founder } */}\r\n                </span>\r\n                <span>\r\n                  Threshold { threshold }\r\n                </span>\r\n                <button onClick={() => handleKeygen(item.id, threshold, 23)}>\r\n                  Generate keys (join)\r\n                </button>\r\n              </div>\r\n            </li>);\r\n          }) }\r\n          </ul>\r\n        </div>\r\n        }\r\n        <div className='container'>\r\n          <span>Your Societies</span>\r\n          <ul>\r\n          { activeMemberships.map((s, idx) => {\r\n            return (<li>\r\n              {JSON.stringify(s)}\r\n          </li>);\r\n          }) }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const CreateSociety = () => {\r\n    const [threshold, setThreshold] = useState(0);\r\n    const [deadline, setDeadline] = useState(0);\r\n    const [name, setName] = useState('');\r\n    const [id, setId] = useState('');\r\n    // TODO: for now, Alice is the only member\r\n    const [members, setMembers] = useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleCreateSociety = () => {\r\n      setIsLoading(true);\r\n      api.tx.society.createSociety(\r\n        id, threshold, name, deadline, [acct.address]\r\n      ).signAndSend(acct, result => {\r\n        if (result.isInBlock) {\r\n          console.log('the tx was successful');\r\n        } \r\n        if (result.isFinalized) {\r\n          console.log('the tx is finalized');\r\n          // will emit an event in the future\r\n          setIsLoading(false);\r\n          // updateMembershipMaps(api, acct);\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className='section'>\r\n        <span>\r\n          Create a Society\r\n        </span>\r\n        {isLoading === true ? \r\n        <div>\r\n          <p>Loading...</p>\r\n        </div> :\r\n        <div className='form'> \r\n\r\n        <label htmlFor='threshold'>threshold</label>\r\n        <input id=\"threshold\" type=\"number\" value={threshold} onChange={e => setThreshold(e.target.value)} />\r\n\r\n        <label htmlFor='id'>id</label>\r\n        <input id=\"id\" type=\"text\" value = {id} onChange={e => setId(e.target.value)} />\r\n\r\n        <label htmlFor='name'>name</label>\r\n        <input id=\"name\" type=\"text\" value = {name} onChange={e => setName(e.target.value)} />\r\n\r\n        <label htmlFor='deadline'>deadline</label>\r\n        <input id=\"deadline\" type=\"number\" value = {deadline} onChange={e => setDeadline(e.target.value)} />\r\n\r\n        <button onClick={handleCreateSociety}> Create Society\r\n        </button>\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // const calculateGroupPublicKey = () => {\r\n  //   return society.reduce((a, b) => w_combine_pubkeys(a.pubkey, b.pubkey));\r\n  // }\r\n\r\n  // const calculateGroupSecretKey = () => {\r\n  //   return society.reduce((a, b) => w_combine_secrets(a.secret, b.secret));\r\n  // }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='header'>\r\n        <h2>Cryptex</h2>\r\n        <span>\r\n          Api is { api === null ? 'not' : '' } ready\r\n        </span>\r\n      </div>\r\n      <div className='body'>\r\n        <div className='section'>\r\n          <Memberships />\r\n        </div>\r\n        <div className='section'>\r\n          <CreateSociety />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}