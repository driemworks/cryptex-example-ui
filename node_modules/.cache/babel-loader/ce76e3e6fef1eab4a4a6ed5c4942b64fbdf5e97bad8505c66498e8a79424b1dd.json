{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { AsBind } from 'as-bind';\nexport const useWasm = () => {\n  _s();\n  const [state, setState] = useState(null);\n  useEffect(() => {\n    const fetchWasm = async () => {\n      const wasm = await fetch('my-wasm.wasm');\n      const instance = await AsBind.instantiate(wasm, {});\n      setState(instance);\n    };\n    fetchWasm();\n  }, []);\n  return state;\n};\n_s(useWasm, \"fkdfczwZ0ursGZj/fOecNSC7G+w=\");","map":{"version":3,"names":["useEffect","useState","AsBind","useWasm","_s","state","setState","fetchWasm","wasm","fetch","instance","instantiate"],"sources":["/home/driemworks/dkg/examples/react-wasm-client/src/useWasm.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { AsBind } from 'as-bind';\r\n\r\nexport const useWasm = () => {\r\n  const [state, setState] = useState(null);\r\n  useEffect(() => { \r\n    const fetchWasm = async () => {\r\n      const wasm = await fetch('my-wasm.wasm');\r\n      const instance = await AsBind.instantiate(wasm, {});\r\n      setState(instance);\r\n    };\r\n    fetchWasm();\r\n  }, []);\r\n  return state;\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,SAAS;AAEhC,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxCD,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC;MACxC,MAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,WAAW,CAACH,IAAI,EAAE,CAAC,CAAC,CAAC;MACnDF,QAAQ,CAACI,QAAQ,CAAC;IACpB,CAAC;IACDH,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,KAAK;AACd,CAAC;AAAAD,EAAA,CAXYD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}