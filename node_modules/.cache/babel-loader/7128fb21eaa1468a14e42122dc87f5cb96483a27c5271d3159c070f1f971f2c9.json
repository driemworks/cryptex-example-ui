{"ast":null,"code":"var _jsxFileName = \"/home/driemworks/cryptex/ui/src/App.js\",\n  _s3 = $RefreshSig$();\n/* global BigInt */\nimport './App.css';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { w_keygen, w_calculate_secret, w_calculate_pubkey, w_combine_pubkeys, w_combine_secrets, w_encrypt, w_threshold_decrypt } from \"dkg-wasm\";\nimport { useWasm } from './useWasm';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // make sure the wasm blob is loaded\n  useWasm();\n  const [api, setApi] = useState(null);\n  const [acct, setAcct] = useState(null);\n  const [societyId, setSocietyId] = useState('');\n  const [invitations, setInvitiations] = useState([]);\n  const [activeMemberships, setActiveMemberships] = useState([]);\n  useEffect(() => {\n    const host = \"127.0.0.1\";\n    const port = \"9944\";\n    let provider = new WsProvider(`ws://${host}:${port}`);\n    const f = async () => {\n      const api = await ApiPromise.create({\n        provider,\n        types: {\n          SocietyId: \"Bytes\"\n        }\n      });\n      await api.isReady;\n      setApi(api);\n      // load ALICE account\n      const keyring = new Keyring({\n        type: 'sr25519'\n      });\n      let acct = keyring.addFromUri(\"//Alice\");\n      setAcct(acct);\n      updateMembershipMaps(api, acct);\n    };\n    f();\n  }, []);\n  const handleQuerySociety = async (api, id) => {\n    let society = await api.query.society.societies(id);\n    console.log('society info' + JSON.stringify(society));\n    return society;\n  };\n  const updateMembershipMaps = async (api, acct) => {\n    let my_invitations = await api.query.society.membership(acct.address, \"invitee\");\n    let inviteSocs = [];\n    my_invitations.forEach(async invite => {\n      let society = await handleQuerySociety(api, invite);\n      inviteSocs.push({\n        id: invite,\n        society: society\n      });\n    });\n    setInvitiations(inviteSocs);\n    let activeMembershipsResults = await api.query.society.membership(acct.address, \"active\");\n    let activeSocs = [];\n    activeMembershipsResults.forEach(async membership => {\n      let society = await handleQuerySociety(api, membership);\n      console.log('adsfadsf ' + JSON.stringify(society));\n      activeSocs.push({\n        id: membership,\n        society: society\n      });\n      console.log('active socs ' + activeSocs);\n    });\n    setActiveMemberships(activeSocs);\n  };\n  const Memberships = () => {\n    _s();\n    const [isLoading, setIsLoading] = useState(false);\n    const [displayText, setDisplayText] = useState(['']);\n    useEffect(() => {\n      // updateMembershipMaps(api, acct);\n    });\n    const handleKeygen = (id, threshold, r) => {\n      setIsLoading(true);\n      setDisplayText([...displayText, 'Generating secrets']);\n      // each participant must agree on two numbers\n      let r1 = 45432;\n      let r2 = 48484;\n      let poly = w_keygen(BigInt(r), threshold);\n      let secret = w_calculate_secret(poly.coeffs);\n      let pubkey = w_calculate_pubkey(BigInt(r1), BigInt(r2), secret);\n      setDisplayText([...displayText, 'Calculated public key']);\n      setDisplayText([...displayText, 'Submitting signed tx']);\n      api.tx.society.joinSociety(id, pubkey.g2).signAndSend(acct, result => {\n        if (result.isFinalized) {\n          console.log('the tx is finalized');\n          setDisplayText([...displayText, 'Tx finalized']);\n          updateMembershipMaps(api, acct);\n          setDisplayText('');\n          setIsLoading(false);\n        }\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"membership-container\",\n      children: [isLoading === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: displayText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Invites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: invitations.map((item, idx) => {\n            let threshold = JSON.parse(JSON.stringify(item.society)).threshold;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Society Id \", item.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Founded By \", JSON.parse(JSON.stringify(item.society)).founder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Threshold \", threshold]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleKeygen(item.id, threshold, 23),\n                  children: \"Generate keys (join)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Your Societies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: activeMemberships.map((s, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: JSON.stringify(s)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Memberships, \"7LPu/OxSMtPDPuRNfHs95/04GcA=\");\n  const CreateSociety = () => {\n    _s2();\n    const [threshold, setThreshold] = useState(0);\n    const [deadline, setDeadline] = useState(0);\n    const [name, setName] = useState('');\n    const [id, setId] = useState('');\n    // TODO: for now, Alice is the only member\n    const [members, setMembers] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const handleCreateSociety = () => {\n      setIsLoading(true);\n      api.tx.society.createSociety(id, threshold, name, deadline, [acct.address]).signAndSend(acct, result => {\n        if (result.isInBlock) {\n          console.log('the tx was successful');\n        }\n        if (result.isFinalized) {\n          console.log('the tx is finalized');\n          // will emit an event in the future\n          setIsLoading(false);\n          updateMembershipMaps(api, acct);\n        }\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Create a Society\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), isLoading === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"threshold\",\n          children: \"threshold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"threshold\",\n          type: \"number\",\n          value: threshold,\n          onChange: e => setThreshold(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"id\",\n          type: \"text\",\n          value: id,\n          onChange: e => setId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deadline\",\n          children: \"deadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"deadline\",\n          type: \"number\",\n          value: deadline,\n          onChange: e => setDeadline(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateSociety,\n          children: \" Create Society\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  };\n\n  // const calculateGroupPublicKey = () => {\n  //   return society.reduce((a, b) => w_combine_pubkeys(a.pubkey, b.pubkey));\n  // }\n\n  // const calculateGroupSecretKey = () => {\n  //   return society.reduce((a, b) => w_combine_secrets(a.secret, b.secret));\n  // }\n  _s2(CreateSociety, \"5tR40lZ+f7X99FprSO3aX2SzpP4=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cryptex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Api is \", api === null ? 'not' : '', \" ready\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: /*#__PURE__*/_jsxDEV(Memberships, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: /*#__PURE__*/_jsxDEV(CreateSociety, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"id/Kt9isKrgLdAk9VeungsWDpsA=\", false, function () {\n  return [useWasm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ApiPromise","WsProvider","Keyring","w_keygen","w_calculate_secret","w_calculate_pubkey","w_combine_pubkeys","w_combine_secrets","w_encrypt","w_threshold_decrypt","useWasm","useEffect","useState","jsxDEV","_jsxDEV","App","_s3","_s","$RefreshSig$","_s2","api","setApi","acct","setAcct","societyId","setSocietyId","invitations","setInvitiations","activeMemberships","setActiveMemberships","host","port","provider","f","create","types","SocietyId","isReady","keyring","type","addFromUri","updateMembershipMaps","handleQuerySociety","id","society","query","societies","console","log","JSON","stringify","my_invitations","membership","address","inviteSocs","forEach","invite","push","activeMembershipsResults","activeSocs","Memberships","isLoading","setIsLoading","displayText","setDisplayText","handleKeygen","threshold","r","r1","r2","poly","BigInt","secret","coeffs","pubkey","tx","joinSociety","g2","signAndSend","result","isFinalized","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","idx","parse","founder","onClick","s","CreateSociety","setThreshold","deadline","setDeadline","name","setName","setId","members","setMembers","handleCreateSociety","createSociety","isInBlock","htmlFor","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/driemworks/cryptex/ui/src/App.js"],"sourcesContent":["/* global BigInt */\r\nimport './App.css';\r\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\r\nimport { \r\n    w_keygen, w_calculate_secret, \r\n    w_calculate_pubkey, w_combine_pubkeys,\r\n    w_combine_secrets, w_encrypt, w_threshold_decrypt\r\n} from \"dkg-wasm\";\r\nimport { useWasm } from './useWasm';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n  // make sure the wasm blob is loaded\r\n  useWasm();\r\n\r\n  const [api, setApi] = useState(null);\r\n  const [acct, setAcct] = useState(null);\r\n  const [societyId, setSocietyId] = useState('');\r\n  const [invitations, setInvitiations] = useState([]);\r\n  const [activeMemberships, setActiveMemberships] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const host = \"127.0.0.1\";\r\n    const port = \"9944\";\r\n    let provider = new WsProvider(`ws://${host}:${port}`);\r\n    const f = async () => {\r\n      const api = await ApiPromise.create({\r\n        provider,\r\n        types: {\r\n          SocietyId: \"Bytes\",\r\n        }\r\n      });\r\n      await api.isReady;\r\n      setApi(api);\r\n      // load ALICE account\r\n      const keyring = new Keyring({ type: 'sr25519' });\r\n      let acct = keyring.addFromUri(\"//Alice\");\r\n      setAcct(acct);\r\n      updateMembershipMaps(api, acct);\r\n    }\r\n    f();\r\n  }, []);\r\n\r\n  const handleQuerySociety = async(api, id) => {\r\n    let society = await api.query.society.societies(id);\r\n    console.log('society info' + JSON.stringify(society));\r\n    return society;\r\n  }\r\n\r\n  const updateMembershipMaps = async (api, acct) => {\r\n    let my_invitations = await api.query.society.membership(acct.address, \"invitee\");\r\n    let inviteSocs = [];\r\n    my_invitations.forEach(async invite => {\r\n      let society = await handleQuerySociety(api, invite);\r\n      inviteSocs.push({\r\n        id: invite,\r\n        society: society,\r\n      });\r\n    });\r\n    setInvitiations(inviteSocs);\r\n\r\n    let activeMembershipsResults = await api.query.society.membership(acct.address, \"active\");\r\n    let activeSocs = [];\r\n    activeMembershipsResults.forEach(async membership => {\r\n      let society = await handleQuerySociety(api, membership);\r\n      console.log('adsfadsf ' + JSON.stringify(society));\r\n      activeSocs.push({\r\n        id: membership,\r\n        society: society,\r\n      });\r\n      console.log('active socs ' + activeSocs);\r\n    });\r\n    setActiveMemberships(activeSocs);\r\n  }\r\n\r\n  const Memberships = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [displayText, setDisplayText] = useState(['']);\r\n\r\n    useEffect(() => {\r\n        // updateMembershipMaps(api, acct);\r\n    });\r\n\r\n    const handleKeygen = (id, threshold, r) => {\r\n      setIsLoading(true);\r\n      setDisplayText([...displayText, 'Generating secrets']);\r\n      // each participant must agree on two numbers\r\n      let r1 = 45432;\r\n      let r2 = 48484;\r\n      let poly = w_keygen(BigInt(r), threshold);\r\n      let secret = w_calculate_secret(poly.coeffs);\r\n      let pubkey = w_calculate_pubkey(BigInt(r1), BigInt(r2), secret);\r\n      \r\n      setDisplayText([...displayText, 'Calculated public key']);\r\n      setDisplayText([...displayText, 'Submitting signed tx']);\r\n      api.tx.society.joinSociety(\r\n        id, pubkey.g2,\r\n      ).signAndSend(acct, result => {\r\n        if (result.isFinalized) {\r\n          console.log('the tx is finalized');\r\n          setDisplayText([...displayText, 'Tx finalized']);\r\n          updateMembershipMaps(api, acct);\r\n          setDisplayText('');\r\n          setIsLoading(false);\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className='membership-container'>\r\n        { isLoading === true ? \r\n        <div>\r\n          {displayText}\r\n        </div> :\r\n        <div className='container'>\r\n          <span>Invites</span>\r\n          <ul>\r\n          { invitations.map((item, idx) => {\r\n            let threshold = JSON.parse(JSON.stringify(item.society)).threshold;\r\n            return (<li>\r\n              <div className='section'>\r\n                <span>\r\n                  Society Id { item.id }\r\n                </span>\r\n                <span>\r\n                  Founded By { JSON.parse(JSON.stringify(item.society)).founder }\r\n                  {/* { item.society.founder } */}\r\n                </span>\r\n                <span>\r\n                  Threshold { threshold }\r\n                </span>\r\n                <button onClick={() => handleKeygen(item.id, threshold, 23)}>\r\n                  Generate keys (join)\r\n                </button>\r\n              </div>\r\n            </li>);\r\n          }) }\r\n          </ul>\r\n        </div>\r\n        }\r\n        <div className='container'>\r\n          <span>Your Societies</span>\r\n          <ul>\r\n          { activeMemberships.map((s, idx) => {\r\n            return (<li>\r\n              {JSON.stringify(s)}\r\n          </li>);\r\n          }) }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const CreateSociety = () => {\r\n    const [threshold, setThreshold] = useState(0);\r\n    const [deadline, setDeadline] = useState(0);\r\n    const [name, setName] = useState('');\r\n    const [id, setId] = useState('');\r\n    // TODO: for now, Alice is the only member\r\n    const [members, setMembers] = useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleCreateSociety = () => {\r\n      setIsLoading(true);\r\n      api.tx.society.createSociety(\r\n        id, threshold, name, deadline, [acct.address]\r\n      ).signAndSend(acct, result => {\r\n        if (result.isInBlock) {\r\n          console.log('the tx was successful');\r\n        } \r\n        if (result.isFinalized) {\r\n          console.log('the tx is finalized');\r\n          // will emit an event in the future\r\n          setIsLoading(false);\r\n          updateMembershipMaps(api, acct);\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className='section'>\r\n        <span>\r\n          Create a Society\r\n        </span>\r\n        {isLoading === true ? \r\n        <div>\r\n          <p>Loading...</p>\r\n        </div> :\r\n        <div className='form'> \r\n\r\n        <label htmlFor='threshold'>threshold</label>\r\n        <input id=\"threshold\" type=\"number\" value={threshold} onChange={e => setThreshold(e.target.value)} />\r\n\r\n        <label htmlFor='id'>id</label>\r\n        <input id=\"id\" type=\"text\" value = {id} onChange={e => setId(e.target.value)} />\r\n\r\n        <label htmlFor='name'>name</label>\r\n        <input id=\"name\" type=\"text\" value = {name} onChange={e => setName(e.target.value)} />\r\n\r\n        <label htmlFor='deadline'>deadline</label>\r\n        <input id=\"deadline\" type=\"number\" value = {deadline} onChange={e => setDeadline(e.target.value)} />\r\n\r\n        <button onClick={handleCreateSociety}> Create Society\r\n        </button>\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // const calculateGroupPublicKey = () => {\r\n  //   return society.reduce((a, b) => w_combine_pubkeys(a.pubkey, b.pubkey));\r\n  // }\r\n\r\n  // const calculateGroupSecretKey = () => {\r\n  //   return society.reduce((a, b) => w_combine_secrets(a.secret, b.secret));\r\n  // }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='header'>\r\n        <h2>Cryptex</h2>\r\n        <span>\r\n          Api is { api === null ? 'not' : '' } ready\r\n        </span>\r\n      </div>\r\n      <div className='body'>\r\n        <div className='section'>\r\n          <Memberships />\r\n        </div>\r\n        <div className='section'>\r\n          <CreateSociety />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}