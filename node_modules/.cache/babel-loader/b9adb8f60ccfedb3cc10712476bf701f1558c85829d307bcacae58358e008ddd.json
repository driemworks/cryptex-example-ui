{"ast":null,"code":"import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { getEraCache, setEraCache } from './cache.js';\nimport { combineEras, erasHistoricApply, singleEra } from './util.js';\nconst CACHE_KEY = 'eraExposure';\nfunction mapStakers(era, stakers) {\n  const nominators = {};\n  const validators = {};\n  stakers.forEach(_ref => {\n    let [key, exposure] = _ref;\n    const validatorId = key.args[1].toString();\n    validators[validatorId] = exposure;\n    exposure.others.forEach((_ref2, validatorIndex) => {\n      let {\n        who\n      } = _ref2;\n      const nominatorId = who.toString();\n      nominators[nominatorId] = nominators[nominatorId] || [];\n      nominators[nominatorId].push({\n        validatorId,\n        validatorIndex\n      });\n    });\n  });\n  return {\n    era,\n    nominators,\n    validators\n  };\n}\nexport function _eraExposure(instanceId, api) {\n  return memo(instanceId, function (era) {\n    let withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const [cacheKey, cached] = getEraCache(CACHE_KEY, era, withActive);\n    return cached ? of(cached) : api.query.staking.erasStakersClipped.entries(era).pipe(map(r => setEraCache(cacheKey, withActive, mapStakers(era, r))));\n  });\n}\nexport const eraExposure = /*#__PURE__*/singleEra('_eraExposure');\nexport const _erasExposure = /*#__PURE__*/combineEras('_eraExposure');\nexport const erasExposure = /*#__PURE__*/erasHistoricApply('_erasExposure');","map":{"version":3,"names":["map","of","memo","getEraCache","setEraCache","combineEras","erasHistoricApply","singleEra","CACHE_KEY","mapStakers","era","stakers","nominators","validators","forEach","_ref","key","exposure","validatorId","args","toString","others","_ref2","validatorIndex","who","nominatorId","push","_eraExposure","instanceId","api","withActive","arguments","length","undefined","cacheKey","cached","query","staking","erasStakersClipped","entries","pipe","r","eraExposure","_erasExposure","erasExposure"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/api-derive/staking/erasExposure.js"],"sourcesContent":["import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { getEraCache, setEraCache } from './cache.js';\nimport { combineEras, erasHistoricApply, singleEra } from './util.js';\nconst CACHE_KEY = 'eraExposure';\nfunction mapStakers(era, stakers) {\n    const nominators = {};\n    const validators = {};\n    stakers.forEach(([key, exposure]) => {\n        const validatorId = key.args[1].toString();\n        validators[validatorId] = exposure;\n        exposure.others.forEach(({ who }, validatorIndex) => {\n            const nominatorId = who.toString();\n            nominators[nominatorId] = nominators[nominatorId] || [];\n            nominators[nominatorId].push({ validatorId, validatorIndex });\n        });\n    });\n    return { era, nominators, validators };\n}\nexport function _eraExposure(instanceId, api) {\n    return memo(instanceId, (era, withActive = false) => {\n        const [cacheKey, cached] = getEraCache(CACHE_KEY, era, withActive);\n        return cached\n            ? of(cached)\n            : api.query.staking.erasStakersClipped.entries(era).pipe(map((r) => setEraCache(cacheKey, withActive, mapStakers(era, r))));\n    });\n}\nexport const eraExposure = /*#__PURE__*/ singleEra('_eraExposure');\nexport const _erasExposure = /*#__PURE__*/ combineEras('_eraExposure');\nexport const erasExposure = /*#__PURE__*/ erasHistoricApply('_erasExposure');\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,EAAE,QAAQ,MAAM;AAC9B,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,YAAY;AACrD,SAASC,WAAW,EAAEC,iBAAiB,EAAEC,SAAS,QAAQ,WAAW;AACrE,MAAMC,SAAS,GAAG,aAAa;AAC/B,SAASC,UAAUA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC9B,MAAMC,UAAU,GAAG,CAAC,CAAC;EACrB,MAAMC,UAAU,GAAG,CAAC,CAAC;EACrBF,OAAO,CAACG,OAAO,CAACC,IAAA,IAAqB;IAAA,IAApB,CAACC,GAAG,EAAEC,QAAQ,CAAC,GAAAF,IAAA;IAC5B,MAAMG,WAAW,GAAGF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE;IAC1CP,UAAU,CAACK,WAAW,CAAC,GAAGD,QAAQ;IAClCA,QAAQ,CAACI,MAAM,CAACP,OAAO,CAAC,CAAAQ,KAAA,EAAUC,cAAc,KAAK;MAAA,IAA5B;QAAEC;MAAI,CAAC,GAAAF,KAAA;MAC5B,MAAMG,WAAW,GAAGD,GAAG,CAACJ,QAAQ,EAAE;MAClCR,UAAU,CAACa,WAAW,CAAC,GAAGb,UAAU,CAACa,WAAW,CAAC,IAAI,EAAE;MACvDb,UAAU,CAACa,WAAW,CAAC,CAACC,IAAI,CAAC;QAAER,WAAW;QAAEK;MAAe,CAAC,CAAC;IACjE,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAO;IAAEb,GAAG;IAAEE,UAAU;IAAEC;EAAW,CAAC;AAC1C;AACA,OAAO,SAASc,YAAYA,CAACC,UAAU,EAAEC,GAAG,EAAE;EAC1C,OAAO3B,IAAI,CAAC0B,UAAU,EAAE,UAAClB,GAAG,EAAyB;IAAA,IAAvBoB,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IAC5C,MAAM,CAACG,QAAQ,EAAEC,MAAM,CAAC,GAAGhC,WAAW,CAACK,SAAS,EAAEE,GAAG,EAAEoB,UAAU,CAAC;IAClE,OAAOK,MAAM,GACPlC,EAAE,CAACkC,MAAM,CAAC,GACVN,GAAG,CAACO,KAAK,CAACC,OAAO,CAACC,kBAAkB,CAACC,OAAO,CAAC7B,GAAG,CAAC,CAAC8B,IAAI,CAACxC,GAAG,CAAEyC,CAAC,IAAKrC,WAAW,CAAC8B,QAAQ,EAAEJ,UAAU,EAAErB,UAAU,CAACC,GAAG,EAAE+B,CAAC,CAAC,CAAC,CAAC,CAAC;EACnI,CAAC,CAAC;AACN;AACA,OAAO,MAAMC,WAAW,GAAG,aAAcnC,SAAS,CAAC,cAAc,CAAC;AAClE,OAAO,MAAMoC,aAAa,GAAG,aAActC,WAAW,CAAC,cAAc,CAAC;AACtE,OAAO,MAAMuC,YAAY,GAAG,aAActC,iBAAiB,CAAC,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}