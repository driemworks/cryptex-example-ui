{"ast":null,"code":"import { isFunction } from '@polkadot/util';\nconst UNKNOWN = -99999;\nfunction extend(that, name, value) {\n  Object.defineProperty(that, name, {\n    configurable: true,\n    enumerable: false,\n    value\n  });\n}\n/**\n * @name RpcError\n * @summary Extension to the basic JS Error.\n * @description\n * The built-in JavaScript Error class is extended by adding a code to allow for Error categorization. In addition to the normal `stack`, `message`, the numeric `code` and `data` (any types) parameters are available on the object.\n * @example\n * <BR>\n *\n * ```javascript\n * const { RpcError } from '@polkadot/util');\n *\n * throw new RpcError('some message', RpcError.CODES.METHOD_NOT_FOUND); // => error.code = -32601\n * ```\n */\nclass RpcError extends Error {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UNKNOWN;\n    let data = arguments.length > 2 ? arguments[2] : undefined;\n    super();\n    extend(this, 'message', String(message));\n    extend(this, 'name', this.constructor.name);\n    extend(this, 'data', data);\n    extend(this, 'code', code);\n    if (isFunction(Error.captureStackTrace)) {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      const {\n        stack\n      } = new Error(message);\n      stack && extend(this, 'stack', stack);\n    }\n  }\n}\nRpcError.CODES = {\n  ASSERT: -90009,\n  INVALID_JSONRPC: -99998,\n  METHOD_NOT_FOUND: -32601,\n  UNKNOWN\n};\nexport default RpcError;","map":{"version":3,"names":["isFunction","UNKNOWN","extend","that","name","value","Object","defineProperty","configurable","enumerable","RpcError","Error","constructor","message","arguments","length","undefined","code","data","String","captureStackTrace","stack","CODES","ASSERT","INVALID_JSONRPC","METHOD_NOT_FOUND"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/rpc-provider/coder/error.js"],"sourcesContent":["import { isFunction } from '@polkadot/util';\nconst UNKNOWN = -99999;\nfunction extend(that, name, value) {\n    Object.defineProperty(that, name, {\n        configurable: true,\n        enumerable: false,\n        value\n    });\n}\n/**\n * @name RpcError\n * @summary Extension to the basic JS Error.\n * @description\n * The built-in JavaScript Error class is extended by adding a code to allow for Error categorization. In addition to the normal `stack`, `message`, the numeric `code` and `data` (any types) parameters are available on the object.\n * @example\n * <BR>\n *\n * ```javascript\n * const { RpcError } from '@polkadot/util');\n *\n * throw new RpcError('some message', RpcError.CODES.METHOD_NOT_FOUND); // => error.code = -32601\n * ```\n */\nclass RpcError extends Error {\n    constructor(message = '', code = UNKNOWN, data) {\n        super();\n        extend(this, 'message', String(message));\n        extend(this, 'name', this.constructor.name);\n        extend(this, 'data', data);\n        extend(this, 'code', code);\n        if (isFunction(Error.captureStackTrace)) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            const { stack } = new Error(message);\n            stack && extend(this, 'stack', stack);\n        }\n    }\n}\nRpcError.CODES = {\n    ASSERT: -90009,\n    INVALID_JSONRPC: -99998,\n    METHOD_NOT_FOUND: -32601,\n    UNKNOWN\n};\nexport default RpcError;\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,MAAMC,OAAO,GAAG,CAAC,KAAK;AACtB,SAASC,MAAMA,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;EAC/BC,MAAM,CAACC,cAAc,CAACJ,IAAI,EAAEC,IAAI,EAAE;IAC9BI,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE,KAAK;IACjBJ;EACJ,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMK,QAAQ,SAASC,KAAK,CAAC;EACzBC,WAAWA,CAAA,EAAqC;IAAA,IAApCC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAA,IAAEG,IAAI,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGb,OAAO;IAAA,IAAEiB,IAAI,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAC1C,KAAK,EAAE;IACPd,MAAM,CAAC,IAAI,EAAE,SAAS,EAAEiB,MAAM,CAACN,OAAO,CAAC,CAAC;IACxCX,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAACU,WAAW,CAACR,IAAI,CAAC;IAC3CF,MAAM,CAAC,IAAI,EAAE,MAAM,EAAEgB,IAAI,CAAC;IAC1BhB,MAAM,CAAC,IAAI,EAAE,MAAM,EAAEe,IAAI,CAAC;IAC1B,IAAIjB,UAAU,CAACW,KAAK,CAACS,iBAAiB,CAAC,EAAE;MACrCT,KAAK,CAACS,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACR,WAAW,CAAC;IACnD,CAAC,MACI;MACD,MAAM;QAAES;MAAM,CAAC,GAAG,IAAIV,KAAK,CAACE,OAAO,CAAC;MACpCQ,KAAK,IAAInB,MAAM,CAAC,IAAI,EAAE,OAAO,EAAEmB,KAAK,CAAC;IACzC;EACJ;AACJ;AACAX,QAAQ,CAACY,KAAK,GAAG;EACbC,MAAM,EAAE,CAAC,KAAK;EACdC,eAAe,EAAE,CAAC,KAAK;EACvBC,gBAAgB,EAAE,CAAC,KAAK;EACxBxB;AACJ,CAAC;AACD,eAAeS,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}