{"ast":null,"code":"var _Pairs_map;\nimport { __classPrivateFieldGet } from \"tslib\";\nimport { isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nexport class Pairs {\n  constructor() {\n    _Pairs_map.set(this, {});\n  }\n  add(pair) {\n    __classPrivateFieldGet(this, _Pairs_map, \"f\")[decodeAddress(pair.address).toString()] = pair;\n    return pair;\n  }\n  all() {\n    return Object.values(__classPrivateFieldGet(this, _Pairs_map, \"f\"));\n  }\n  get(address) {\n    const pair = __classPrivateFieldGet(this, _Pairs_map, \"f\")[decodeAddress(address).toString()];\n    if (!pair) {\n      throw new Error(`Unable to retrieve keypair '${isU8a(address) || isHex(address) ? u8aToHex(u8aToU8a(address)) : address}'`);\n    }\n    return pair;\n  }\n  remove(address) {\n    delete __classPrivateFieldGet(this, _Pairs_map, \"f\")[decodeAddress(address).toString()];\n  }\n}\n_Pairs_map = new WeakMap();","map":{"version":3,"names":["_Pairs_map","__classPrivateFieldGet","isHex","isU8a","u8aToHex","u8aToU8a","decodeAddress","Pairs","constructor","set","add","pair","address","toString","all","Object","values","get","Error","remove","WeakMap"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/keyring/pairs.js"],"sourcesContent":["var _Pairs_map;\nimport { __classPrivateFieldGet } from \"tslib\";\nimport { isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nexport class Pairs {\n    constructor() {\n        _Pairs_map.set(this, {});\n    }\n    add(pair) {\n        __classPrivateFieldGet(this, _Pairs_map, \"f\")[decodeAddress(pair.address).toString()] = pair;\n        return pair;\n    }\n    all() {\n        return Object.values(__classPrivateFieldGet(this, _Pairs_map, \"f\"));\n    }\n    get(address) {\n        const pair = __classPrivateFieldGet(this, _Pairs_map, \"f\")[decodeAddress(address).toString()];\n        if (!pair) {\n            throw new Error(`Unable to retrieve keypair '${isU8a(address) || isHex(address)\n                ? u8aToHex(u8aToU8a(address))\n                : address}'`);\n        }\n        return pair;\n    }\n    remove(address) {\n        delete __classPrivateFieldGet(this, _Pairs_map, \"f\")[decodeAddress(address).toString()];\n    }\n}\n_Pairs_map = new WeakMap();\n"],"mappings":"AAAA,IAAIA,UAAU;AACd,SAASC,sBAAsB,QAAQ,OAAO;AAC9C,SAASC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,gBAAgB;AACjE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,OAAO,MAAMC,KAAK,CAAC;EACfC,WAAWA,CAAA,EAAG;IACVR,UAAU,CAACS,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;EAC5B;EACAC,GAAGA,CAACC,IAAI,EAAE;IACNV,sBAAsB,CAAC,IAAI,EAAED,UAAU,EAAE,GAAG,CAAC,CAACM,aAAa,CAACK,IAAI,CAACC,OAAO,CAAC,CAACC,QAAQ,EAAE,CAAC,GAAGF,IAAI;IAC5F,OAAOA,IAAI;EACf;EACAG,GAAGA,CAAA,EAAG;IACF,OAAOC,MAAM,CAACC,MAAM,CAACf,sBAAsB,CAAC,IAAI,EAAED,UAAU,EAAE,GAAG,CAAC,CAAC;EACvE;EACAiB,GAAGA,CAACL,OAAO,EAAE;IACT,MAAMD,IAAI,GAAGV,sBAAsB,CAAC,IAAI,EAAED,UAAU,EAAE,GAAG,CAAC,CAACM,aAAa,CAACM,OAAO,CAAC,CAACC,QAAQ,EAAE,CAAC;IAC7F,IAAI,CAACF,IAAI,EAAE;MACP,MAAM,IAAIO,KAAK,CAAE,+BAA8Bf,KAAK,CAACS,OAAO,CAAC,IAAIV,KAAK,CAACU,OAAO,CAAC,GACzER,QAAQ,CAACC,QAAQ,CAACO,OAAO,CAAC,CAAC,GAC3BA,OAAQ,GAAE,CAAC;IACrB;IACA,OAAOD,IAAI;EACf;EACAQ,MAAMA,CAACP,OAAO,EAAE;IACZ,OAAOX,sBAAsB,CAAC,IAAI,EAAED,UAAU,EAAE,GAAG,CAAC,CAACM,aAAa,CAACM,OAAO,CAAC,CAACC,QAAQ,EAAE,CAAC;EAC3F;AACJ;AACAb,UAAU,GAAG,IAAIoB,OAAO,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}