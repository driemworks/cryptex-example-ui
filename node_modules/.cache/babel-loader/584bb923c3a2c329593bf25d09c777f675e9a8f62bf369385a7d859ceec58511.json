{"ast":null,"code":"/* global BigInt */\n// import * as wasm from \"dkg/dkg.js\";\n\n/**\r\n * Generate a secret polynomial\r\n * @param {*} seed A seed to generate the random number gen from\r\n * @param {*} threshold The threshold value (i.e. degree) to use when creating the polynomial\r\n */\nexport function keygen(seed, threshold) {\n  import(\"dkg/dkg.js\").then(js => {\n    console.log(\"wasm is ready\");\n    // wasm = js;\n    alert(\"Generated secret key: \" + js.keygen(BigInt(23), 3));\n  });\n}","map":{"version":3,"names":["keygen","seed","threshold","then","js","console","log","alert","BigInt"],"sources":["/home/driemworks/dkg/examples/react-wasm-client/src/dkgLib.js"],"sourcesContent":["/* global BigInt */\r\n// import * as wasm from \"dkg/dkg.js\";\r\n\r\n/**\r\n * Generate a secret polynomial\r\n * @param {*} seed A seed to generate the random number gen from\r\n * @param {*} threshold The threshold value (i.e. degree) to use when creating the polynomial\r\n */\r\nexport function keygen(seed, threshold) {\r\n    import(\"dkg/dkg.js\").then((js) => {\r\n        console.log(\"wasm is ready\");\r\n        // wasm = js;\r\n        alert(\"Generated secret key: \" + js.keygen(BigInt(23), 3)); \r\n    });\r\n}\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,MAAMA,CAACC,IAAI,EAAEC,SAAS,EAAE;EACpC,MAAM,CAAC,YAAY,CAAC,CAACC,IAAI,CAAEC,EAAE,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B;IACAC,KAAK,CAAC,wBAAwB,GAAGH,EAAE,CAACJ,MAAM,CAACQ,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}