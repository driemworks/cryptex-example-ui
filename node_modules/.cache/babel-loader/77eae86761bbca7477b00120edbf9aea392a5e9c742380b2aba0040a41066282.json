{"ast":null,"code":"import { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { extractAuthor } from './util.js';\nexport function createHeaderExtended(registry, header, validators, author) {\n  var _Implementation_author;\n  // an instance of the base extrinsic for us to extend\n  const HeaderBase = registry.createClass('Header');\n  class Implementation extends HeaderBase {\n    constructor(registry, header, validators, author) {\n      super(registry, header);\n      _Implementation_author.set(this, void 0);\n      __classPrivateFieldSet(this, _Implementation_author, author || extractAuthor(this.digest, validators || []), \"f\");\n      this.createdAtHash = header?.createdAtHash;\n    }\n    /**\n     * @description Convenience method, returns the author for the block\n     */\n    get author() {\n      return __classPrivateFieldGet(this, _Implementation_author, \"f\");\n    }\n  }\n  _Implementation_author = new WeakMap();\n  return new Implementation(registry, header, validators, author);\n}","map":{"version":3,"names":["__classPrivateFieldGet","__classPrivateFieldSet","extractAuthor","createHeaderExtended","registry","header","validators","author","_Implementation_author","HeaderBase","createClass","Implementation","constructor","set","digest","createdAtHash","WeakMap"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/api-derive/type/HeaderExtended.js"],"sourcesContent":["import { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { extractAuthor } from './util.js';\nexport function createHeaderExtended(registry, header, validators, author) {\n    var _Implementation_author;\n    // an instance of the base extrinsic for us to extend\n    const HeaderBase = registry.createClass('Header');\n    class Implementation extends HeaderBase {\n        constructor(registry, header, validators, author) {\n            super(registry, header);\n            _Implementation_author.set(this, void 0);\n            __classPrivateFieldSet(this, _Implementation_author, author || extractAuthor(this.digest, validators || []), \"f\");\n            this.createdAtHash = header?.createdAtHash;\n        }\n        /**\n         * @description Convenience method, returns the author for the block\n         */\n        get author() {\n            return __classPrivateFieldGet(this, _Implementation_author, \"f\");\n        }\n    }\n    _Implementation_author = new WeakMap();\n    return new Implementation(registry, header, validators, author);\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,EAAEC,sBAAsB,QAAQ,OAAO;AACtE,SAASC,aAAa,QAAQ,WAAW;AACzC,OAAO,SAASC,oBAAoBA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,EAAE;EACvE,IAAIC,sBAAsB;EAC1B;EACA,MAAMC,UAAU,GAAGL,QAAQ,CAACM,WAAW,CAAC,QAAQ,CAAC;EACjD,MAAMC,cAAc,SAASF,UAAU,CAAC;IACpCG,WAAWA,CAACR,QAAQ,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,EAAE;MAC9C,KAAK,CAACH,QAAQ,EAAEC,MAAM,CAAC;MACvBG,sBAAsB,CAACK,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;MACxCZ,sBAAsB,CAAC,IAAI,EAAEO,sBAAsB,EAAED,MAAM,IAAIL,aAAa,CAAC,IAAI,CAACY,MAAM,EAAER,UAAU,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC;MACjH,IAAI,CAACS,aAAa,GAAGV,MAAM,EAAEU,aAAa;IAC9C;IACA;AACR;AACA;IACQ,IAAIR,MAAMA,CAAA,EAAG;MACT,OAAOP,sBAAsB,CAAC,IAAI,EAAEQ,sBAAsB,EAAE,GAAG,CAAC;IACpE;EACJ;EACAA,sBAAsB,GAAG,IAAIQ,OAAO,EAAE;EACtC,OAAO,IAAIL,cAAc,CAACP,QAAQ,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,CAAC;AACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}