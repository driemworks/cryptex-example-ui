{"ast":null,"code":"import { combineLatest, map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction isVoter(value) {\n  return !Array.isArray(value);\n}\nfunction retrieveStakeOf(elections) {\n  return elections.stakeOf.entries().pipe(map(entries => entries.map(_ref => {\n    let [{\n      args: [accountId]\n    }, stake] = _ref;\n    return [accountId, stake];\n  })));\n}\nfunction retrieveVoteOf(elections) {\n  return elections.votesOf.entries().pipe(map(entries => entries.map(_ref2 => {\n    let [{\n      args: [accountId]\n    }, votes] = _ref2;\n    return [accountId, votes];\n  })));\n}\nfunction retrievePrev(api, elections) {\n  return combineLatest([retrieveStakeOf(elections), retrieveVoteOf(elections)]).pipe(map(_ref3 => {\n    let [stakes, votes] = _ref3;\n    const result = [];\n    votes.forEach(_ref4 => {\n      let [voter, votes] = _ref4;\n      result.push([voter, {\n        stake: api.registry.createType('Balance'),\n        votes\n      }]);\n    });\n    stakes.forEach(_ref5 => {\n      let [staker, stake] = _ref5;\n      const entry = result.find(_ref6 => {\n        let [voter] = _ref6;\n        return voter.eq(staker);\n      });\n      if (entry) {\n        entry[1].stake = stake;\n      } else {\n        result.push([staker, {\n          stake,\n          votes: []\n        }]);\n      }\n    });\n    return result;\n  }));\n}\nfunction retrieveCurrent(elections) {\n  return elections.voting.entries().pipe(map(entries => entries.map(_ref7 => {\n    let [{\n      args: [accountId]\n    }, value] = _ref7;\n    return [accountId, isVoter(value) ? {\n      stake: value.stake,\n      votes: value.votes\n    } : {\n      stake: value[0],\n      votes: value[1]\n    }];\n  })));\n}\nexport function votes(instanceId, api) {\n  const elections = api.query.phragmenElection || api.query.electionsPhragmen || api.query.elections;\n  return memo(instanceId, () => elections ? elections.stakeOf ? retrievePrev(api, elections) : retrieveCurrent(elections) : of([]));\n}","map":{"version":3,"names":["combineLatest","map","of","memo","isVoter","value","Array","isArray","retrieveStakeOf","elections","stakeOf","entries","pipe","_ref","args","accountId","stake","retrieveVoteOf","votesOf","_ref2","votes","retrievePrev","api","_ref3","stakes","result","forEach","_ref4","voter","push","registry","createType","_ref5","staker","entry","find","_ref6","eq","retrieveCurrent","voting","_ref7","instanceId","query","phragmenElection","electionsPhragmen"],"sources":["/home/driemworks/cryptex/ui/node_modules/@polkadot/api-derive/council/votes.js"],"sourcesContent":["import { combineLatest, map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction isVoter(value) {\n    return !Array.isArray(value);\n}\nfunction retrieveStakeOf(elections) {\n    return elections.stakeOf.entries().pipe(map((entries) => entries.map(([{ args: [accountId] }, stake]) => [accountId, stake])));\n}\nfunction retrieveVoteOf(elections) {\n    return elections.votesOf.entries().pipe(map((entries) => entries.map(([{ args: [accountId] }, votes]) => [accountId, votes])));\n}\nfunction retrievePrev(api, elections) {\n    return combineLatest([\n        retrieveStakeOf(elections),\n        retrieveVoteOf(elections)\n    ]).pipe(map(([stakes, votes]) => {\n        const result = [];\n        votes.forEach(([voter, votes]) => {\n            result.push([voter, { stake: api.registry.createType('Balance'), votes }]);\n        });\n        stakes.forEach(([staker, stake]) => {\n            const entry = result.find(([voter]) => voter.eq(staker));\n            if (entry) {\n                entry[1].stake = stake;\n            }\n            else {\n                result.push([staker, { stake, votes: [] }]);\n            }\n        });\n        return result;\n    }));\n}\nfunction retrieveCurrent(elections) {\n    return elections.voting.entries().pipe(map((entries) => entries.map(([{ args: [accountId] }, value]) => [\n        accountId,\n        isVoter(value)\n            ? { stake: value.stake, votes: value.votes }\n            : { stake: value[0], votes: value[1] }\n    ])));\n}\nexport function votes(instanceId, api) {\n    const elections = api.query.phragmenElection || api.query.electionsPhragmen || api.query.elections;\n    return memo(instanceId, () => elections\n        ? elections.stakeOf\n            ? retrievePrev(api, elections)\n            : retrieveCurrent(elections)\n        : of([]));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}