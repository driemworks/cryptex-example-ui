{"ast":null,"code":"let wasm;\nexport function __wbg_set_wasm(val) {\n  wasm = val;\n}\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nlet cachedTextDecoder = new lTextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nlet cachedUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nlet WASM_VECTOR_LEN = 0;\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nlet cachedTextEncoder = new lTextEncoder('utf-8');\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length);\n    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n  let len = arg.length;\n  let ptr = malloc(len);\n  const mem = getUint8Memory0();\n  let offset = 0;\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n/**\n* @param {string} name\n*/\nexport function greet(name) {\n  const ptr0 = passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  const len0 = WASM_VECTOR_LEN;\n  wasm.greet(ptr0, len0);\n}\n\n/**\n* @param {bigint} seed\n* @param {number} threshold\n*/\nexport function keygen(seed, threshold) {\n  wasm.keygen(seed, threshold);\n}\nexport function __wbg_alert_e6be8c4c931c6522(arg0, arg1) {\n  alert(getStringFromWasm0(arg0, arg1));\n}\n;","map":{"version":3,"names":["wasm","__wbg_set_wasm","val","lTextDecoder","TextDecoder","module","require","cachedTextDecoder","ignoreBOM","fatal","decode","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","lTextEncoder","TextEncoder","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","length","written","passStringToWasm0","malloc","realloc","undefined","mem","offset","code","charCodeAt","slice","ret","greet","name","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","keygen","seed","threshold","__wbg_alert_e6be8c4c931c6522","arg0","arg1","alert"],"sources":["/home/driemworks/dkg/pkg/dkg_bg.js"],"sourcesContent":["let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} name\n*/\nexport function greet(name) {\n    const ptr0 = passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.greet(ptr0, len0);\n}\n\n/**\n* @param {bigint} seed\n* @param {number} threshold\n*/\nexport function keygen(seed, threshold) {\n    wasm.keygen(seed, threshold);\n}\n\nexport function __wbg_alert_e6be8c4c931c6522(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}